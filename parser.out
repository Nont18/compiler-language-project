Grammar:

Rule 0     S' -> statement
Rule 1     statement -> PRINT ( expr )  [precedence=left, level=8]
Rule 2     statement -> IF ( expr ) statement  [precedence=left, level=8]
Rule 3     statement -> expr
Rule 4     statement -> NAME = expr
Rule 5     expr -> NAME
Rule 6     expr -> WHILE ( expr ) DO PRINT ( expr )  [precedence=left, level=8]
Rule 7     expr -> PRINT ( expr )  [precedence=left, level=8]
Rule 8     expr -> STRING
Rule 9     expr -> BOOL
Rule 10    expr -> FLOAT
Rule 11    expr -> NUMBER
Rule 12    expr -> ( expr )  [precedence=left, level=8]
Rule 13    expr -> - expr  [precedence=right, level=6]
Rule 14    expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 15    expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr
Rule 16    expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr
Rule 17    expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 18    expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr
Rule 19    expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr
Rule 20    expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 21    expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr
Rule 22    expr -> IF expr EQ expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 23    expr -> IF expr EQ expr THEN NAME = expr
Rule 24    expr -> IF expr LE expr THEN NAME = expr
Rule 25    expr -> IF expr < expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 26    expr -> IF expr < expr THEN NAME = expr
Rule 27    expr -> IF expr GE expr THEN NAME = expr
Rule 28    expr -> IF expr > expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 29    expr -> IF expr > expr THEN NAME = expr
Rule 30    expr -> expr NE expr  [precedence=left, level=2]
Rule 31    expr -> expr EQ expr  [precedence=left, level=2]
Rule 32    expr -> expr LE expr  [precedence=nonassoc, level=5]
Rule 33    expr -> expr < expr  [precedence=nonassoc, level=5]
Rule 34    expr -> expr GE expr  [precedence=nonassoc, level=5]
Rule 35    expr -> expr > expr  [precedence=nonassoc, level=5]
Rule 36    expr -> expr OR expr  [precedence=left, level=4]
Rule 37    expr -> expr AND expr  [precedence=left, level=4]
Rule 38    expr -> expr / expr  [precedence=left, level=3]
Rule 39    expr -> expr * expr  [precedence=left, level=3]
Rule 40    expr -> expr - expr  [precedence=left, level=1]
Rule 41    expr -> expr + expr  [precedence=left, level=1]

Terminals, with rules where they appear:

(                    : 1 2 6 6 7 12 14 14 17 17 20 20 22 25 28
)                    : 1 2 6 6 7 12 14 14 17 17 20 20 22 25 28
*                    : 39
+                    : 41
-                    : 13 40
/                    : 38
<                    : 17 18 25 26 33
=                    : 4 15 15 16 16 18 18 19 19 21 21 23 24 26 27 29
>                    : 20 21 28 29 35
AND                  : 37
BOOL                 : 9
DO                   : 6
ELSE                 : 14 15 16 17 18 19 20 21
EQ                   : 14 15 22 23 31
FLOAT                : 10
GE                   : 19 27 34
IF                   : 2 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
LE                   : 16 24 32
NAME                 : 4 5 15 15 16 16 18 18 19 19 21 21 23 24 26 27 29
NE                   : 30
NUMBER               : 11
OR                   : 36
PRINT                : 1 6 7 14 14 17 17 20 20 22 25 28
STRING               : 8 14 14 17 17 20 20 22 25 28
THEN                 : 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
WHILE                : 6
error                : 

Nonterminals, with rules where they appear:

expr                 : 1 2 3 4 6 6 7 12 13 14 14 15 15 15 15 16 16 16 16 17 17 18 18 18 18 19 19 19 19 20 20 21 21 21 21 22 22 23 23 23 24 24 24 25 25 26 26 26 27 27 27 28 28 29 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41
statement            : 2 0


state 0

    (0) S' -> . statement
    (1) statement -> . PRINT ( expr )
    (2) statement -> . IF ( expr ) statement
    (3) statement -> . expr
    (4) statement -> . NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    PRINT           shift and go to state 2
    IF              shift and go to state 5
    NAME            shift and go to state 6
    WHILE           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12

    statement                      shift and go to state 1
    expr                           shift and go to state 4

state 1

    (0) S' -> statement .


state 2

    (1) statement -> PRINT . ( expr )
    (7) expr -> PRINT . ( expr )
    (               shift and go to state 13


state 3

    (12) expr -> ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 14

state 4

    (3) statement -> expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    $end            reduce using rule 3 (statement -> expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 5

    (2) statement -> IF . ( expr ) statement
    (14) expr -> IF . expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF . expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> IF . expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> IF . expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF . expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF . expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF . expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF . expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF . expr EQ expr THEN PRINT ( STRING )
    (23) expr -> IF . expr EQ expr THEN NAME = expr
    (24) expr -> IF . expr LE expr THEN NAME = expr
    (25) expr -> IF . expr < expr THEN PRINT ( STRING )
    (26) expr -> IF . expr < expr THEN NAME = expr
    (27) expr -> IF . expr GE expr THEN NAME = expr
    (28) expr -> IF . expr > expr THEN PRINT ( STRING )
    (29) expr -> IF . expr > expr THEN NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    (               shift and go to state 30
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 31

state 6

    (4) statement -> NAME . = expr
    (5) expr -> NAME .
    =               shift and go to state 32
    NE              reduce using rule 5 (expr -> NAME .)
    EQ              reduce using rule 5 (expr -> NAME .)
    LE              reduce using rule 5 (expr -> NAME .)
    <               reduce using rule 5 (expr -> NAME .)
    GE              reduce using rule 5 (expr -> NAME .)
    >               reduce using rule 5 (expr -> NAME .)
    OR              reduce using rule 5 (expr -> NAME .)
    AND             reduce using rule 5 (expr -> NAME .)
    /               reduce using rule 5 (expr -> NAME .)
    *               reduce using rule 5 (expr -> NAME .)
    -               reduce using rule 5 (expr -> NAME .)
    +               reduce using rule 5 (expr -> NAME .)
    $end            reduce using rule 5 (expr -> NAME .)


state 7

    (6) expr -> WHILE . ( expr ) DO PRINT ( expr )
    (               shift and go to state 33


state 8

    (8) expr -> STRING .
    NE              reduce using rule 8 (expr -> STRING .)
    EQ              reduce using rule 8 (expr -> STRING .)
    LE              reduce using rule 8 (expr -> STRING .)
    <               reduce using rule 8 (expr -> STRING .)
    GE              reduce using rule 8 (expr -> STRING .)
    >               reduce using rule 8 (expr -> STRING .)
    OR              reduce using rule 8 (expr -> STRING .)
    AND             reduce using rule 8 (expr -> STRING .)
    /               reduce using rule 8 (expr -> STRING .)
    *               reduce using rule 8 (expr -> STRING .)
    -               reduce using rule 8 (expr -> STRING .)
    +               reduce using rule 8 (expr -> STRING .)
    $end            reduce using rule 8 (expr -> STRING .)
    )               reduce using rule 8 (expr -> STRING .)
    THEN            reduce using rule 8 (expr -> STRING .)
    ELSE            reduce using rule 8 (expr -> STRING .)


state 9

    (9) expr -> BOOL .
    NE              reduce using rule 9 (expr -> BOOL .)
    EQ              reduce using rule 9 (expr -> BOOL .)
    LE              reduce using rule 9 (expr -> BOOL .)
    <               reduce using rule 9 (expr -> BOOL .)
    GE              reduce using rule 9 (expr -> BOOL .)
    >               reduce using rule 9 (expr -> BOOL .)
    OR              reduce using rule 9 (expr -> BOOL .)
    AND             reduce using rule 9 (expr -> BOOL .)
    /               reduce using rule 9 (expr -> BOOL .)
    *               reduce using rule 9 (expr -> BOOL .)
    -               reduce using rule 9 (expr -> BOOL .)
    +               reduce using rule 9 (expr -> BOOL .)
    $end            reduce using rule 9 (expr -> BOOL .)
    )               reduce using rule 9 (expr -> BOOL .)
    THEN            reduce using rule 9 (expr -> BOOL .)
    ELSE            reduce using rule 9 (expr -> BOOL .)


state 10

    (10) expr -> FLOAT .
    NE              reduce using rule 10 (expr -> FLOAT .)
    EQ              reduce using rule 10 (expr -> FLOAT .)
    LE              reduce using rule 10 (expr -> FLOAT .)
    <               reduce using rule 10 (expr -> FLOAT .)
    GE              reduce using rule 10 (expr -> FLOAT .)
    >               reduce using rule 10 (expr -> FLOAT .)
    OR              reduce using rule 10 (expr -> FLOAT .)
    AND             reduce using rule 10 (expr -> FLOAT .)
    /               reduce using rule 10 (expr -> FLOAT .)
    *               reduce using rule 10 (expr -> FLOAT .)
    -               reduce using rule 10 (expr -> FLOAT .)
    +               reduce using rule 10 (expr -> FLOAT .)
    $end            reduce using rule 10 (expr -> FLOAT .)
    )               reduce using rule 10 (expr -> FLOAT .)
    THEN            reduce using rule 10 (expr -> FLOAT .)
    ELSE            reduce using rule 10 (expr -> FLOAT .)


state 11

    (11) expr -> NUMBER .
    NE              reduce using rule 11 (expr -> NUMBER .)
    EQ              reduce using rule 11 (expr -> NUMBER .)
    LE              reduce using rule 11 (expr -> NUMBER .)
    <               reduce using rule 11 (expr -> NUMBER .)
    GE              reduce using rule 11 (expr -> NUMBER .)
    >               reduce using rule 11 (expr -> NUMBER .)
    OR              reduce using rule 11 (expr -> NUMBER .)
    AND             reduce using rule 11 (expr -> NUMBER .)
    /               reduce using rule 11 (expr -> NUMBER .)
    *               reduce using rule 11 (expr -> NUMBER .)
    -               reduce using rule 11 (expr -> NUMBER .)
    +               reduce using rule 11 (expr -> NUMBER .)
    $end            reduce using rule 11 (expr -> NUMBER .)
    )               reduce using rule 11 (expr -> NUMBER .)
    THEN            reduce using rule 11 (expr -> NUMBER .)
    ELSE            reduce using rule 11 (expr -> NUMBER .)


state 12

    (13) expr -> - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 34

state 13

    (1) statement -> PRINT ( . expr )
    (7) expr -> PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 35

state 14

    (12) expr -> ( expr . )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 36
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 15

    (5) expr -> NAME .
    )               reduce using rule 5 (expr -> NAME .)
    NE              reduce using rule 5 (expr -> NAME .)
    EQ              reduce using rule 5 (expr -> NAME .)
    LE              reduce using rule 5 (expr -> NAME .)
    <               reduce using rule 5 (expr -> NAME .)
    GE              reduce using rule 5 (expr -> NAME .)
    >               reduce using rule 5 (expr -> NAME .)
    OR              reduce using rule 5 (expr -> NAME .)
    AND             reduce using rule 5 (expr -> NAME .)
    /               reduce using rule 5 (expr -> NAME .)
    *               reduce using rule 5 (expr -> NAME .)
    -               reduce using rule 5 (expr -> NAME .)
    +               reduce using rule 5 (expr -> NAME .)
    $end            reduce using rule 5 (expr -> NAME .)
    THEN            reduce using rule 5 (expr -> NAME .)
    ELSE            reduce using rule 5 (expr -> NAME .)


state 16

    (7) expr -> PRINT . ( expr )
    (               shift and go to state 37


state 17

    (14) expr -> IF . expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF . expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> IF . expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> IF . expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF . expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF . expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF . expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF . expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF . expr EQ expr THEN PRINT ( STRING )
    (23) expr -> IF . expr EQ expr THEN NAME = expr
    (24) expr -> IF . expr LE expr THEN NAME = expr
    (25) expr -> IF . expr < expr THEN PRINT ( STRING )
    (26) expr -> IF . expr < expr THEN NAME = expr
    (27) expr -> IF . expr GE expr THEN NAME = expr
    (28) expr -> IF . expr > expr THEN PRINT ( STRING )
    (29) expr -> IF . expr > expr THEN NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 31

state 18

    (30) expr -> expr NE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 38

state 19

    (31) expr -> expr EQ . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 39

state 20

    (32) expr -> expr LE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 40

state 21

    (33) expr -> expr < . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 41

state 22

    (34) expr -> expr GE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 42

state 23

    (35) expr -> expr > . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 43

state 24

    (36) expr -> expr OR . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 44

state 25

    (37) expr -> expr AND . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 45

state 26

    (38) expr -> expr / . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 46

state 27

    (39) expr -> expr * . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 47

state 28

    (40) expr -> expr - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 48

state 29

    (41) expr -> expr + . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 49

state 30

    (2) statement -> IF ( . expr ) statement
    (12) expr -> ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 50

state 31

    (14) expr -> IF expr . EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF expr . EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> IF expr . LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> IF expr . < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr . < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF expr . GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF expr . > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr . > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF expr . EQ expr THEN PRINT ( STRING )
    (23) expr -> IF expr . EQ expr THEN NAME = expr
    (24) expr -> IF expr . LE expr THEN NAME = expr
    (25) expr -> IF expr . < expr THEN PRINT ( STRING )
    (26) expr -> IF expr . < expr THEN NAME = expr
    (27) expr -> IF expr . GE expr THEN NAME = expr
    (28) expr -> IF expr . > expr THEN PRINT ( STRING )
    (29) expr -> IF expr . > expr THEN NAME = expr
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    EQ              shift and go to state 51
    LE              shift and go to state 52
    <               shift and go to state 53
    GE              shift and go to state 54
    >               shift and go to state 55
    NE              shift and go to state 18
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 32

    (4) statement -> NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 56

state 33

    (6) expr -> WHILE ( . expr ) DO PRINT ( expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 57

state 34

    (13) expr -> - expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 13 (expr -> - expr .)
    EQ              reduce using rule 13 (expr -> - expr .)
    LE              reduce using rule 13 (expr -> - expr .)
    <               reduce using rule 13 (expr -> - expr .)
    GE              reduce using rule 13 (expr -> - expr .)
    >               reduce using rule 13 (expr -> - expr .)
    OR              reduce using rule 13 (expr -> - expr .)
    AND             reduce using rule 13 (expr -> - expr .)
    /               reduce using rule 13 (expr -> - expr .)
    *               reduce using rule 13 (expr -> - expr .)
    -               reduce using rule 13 (expr -> - expr .)
    +               reduce using rule 13 (expr -> - expr .)
    $end            reduce using rule 13 (expr -> - expr .)
    )               reduce using rule 13 (expr -> - expr .)
    THEN            reduce using rule 13 (expr -> - expr .)
    ELSE            reduce using rule 13 (expr -> - expr .)


state 35

    (1) statement -> PRINT ( expr . )
    (7) expr -> PRINT ( expr . )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 58
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 36

    (12) expr -> ( expr ) .
    NE              reduce using rule 12 (expr -> ( expr ) .)
    EQ              reduce using rule 12 (expr -> ( expr ) .)
    LE              reduce using rule 12 (expr -> ( expr ) .)
    <               reduce using rule 12 (expr -> ( expr ) .)
    GE              reduce using rule 12 (expr -> ( expr ) .)
    >               reduce using rule 12 (expr -> ( expr ) .)
    OR              reduce using rule 12 (expr -> ( expr ) .)
    AND             reduce using rule 12 (expr -> ( expr ) .)
    /               reduce using rule 12 (expr -> ( expr ) .)
    *               reduce using rule 12 (expr -> ( expr ) .)
    -               reduce using rule 12 (expr -> ( expr ) .)
    +               reduce using rule 12 (expr -> ( expr ) .)
    $end            reduce using rule 12 (expr -> ( expr ) .)
    )               reduce using rule 12 (expr -> ( expr ) .)
    THEN            reduce using rule 12 (expr -> ( expr ) .)
    ELSE            reduce using rule 12 (expr -> ( expr ) .)


state 37

    (7) expr -> PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 59

state 38

    (30) expr -> expr NE expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 30 (expr -> expr NE expr .)
    EQ              reduce using rule 30 (expr -> expr NE expr .)
    -               reduce using rule 30 (expr -> expr NE expr .)
    +               reduce using rule 30 (expr -> expr NE expr .)
    $end            reduce using rule 30 (expr -> expr NE expr .)
    )               reduce using rule 30 (expr -> expr NE expr .)
    THEN            reduce using rule 30 (expr -> expr NE expr .)
    ELSE            reduce using rule 30 (expr -> expr NE expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 39

    (31) expr -> expr EQ expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 31 (expr -> expr EQ expr .)
    EQ              reduce using rule 31 (expr -> expr EQ expr .)
    -               reduce using rule 31 (expr -> expr EQ expr .)
    +               reduce using rule 31 (expr -> expr EQ expr .)
    $end            reduce using rule 31 (expr -> expr EQ expr .)
    )               reduce using rule 31 (expr -> expr EQ expr .)
    THEN            reduce using rule 31 (expr -> expr EQ expr .)
    ELSE            reduce using rule 31 (expr -> expr EQ expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 40

    (32) expr -> expr LE expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 32 (expr -> expr LE expr .)
    EQ              reduce using rule 32 (expr -> expr LE expr .)
    LE              reduce using rule 32 (expr -> expr LE expr .)
    <               reduce using rule 32 (expr -> expr LE expr .)
    GE              reduce using rule 32 (expr -> expr LE expr .)
    >               reduce using rule 32 (expr -> expr LE expr .)
    OR              reduce using rule 32 (expr -> expr LE expr .)
    AND             reduce using rule 32 (expr -> expr LE expr .)
    /               reduce using rule 32 (expr -> expr LE expr .)
    *               reduce using rule 32 (expr -> expr LE expr .)
    -               reduce using rule 32 (expr -> expr LE expr .)
    +               reduce using rule 32 (expr -> expr LE expr .)
    $end            reduce using rule 32 (expr -> expr LE expr .)
    )               reduce using rule 32 (expr -> expr LE expr .)
    THEN            reduce using rule 32 (expr -> expr LE expr .)
    ELSE            reduce using rule 32 (expr -> expr LE expr .)


state 41

    (33) expr -> expr < expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 33 (expr -> expr < expr .)
    EQ              reduce using rule 33 (expr -> expr < expr .)
    LE              reduce using rule 33 (expr -> expr < expr .)
    <               reduce using rule 33 (expr -> expr < expr .)
    GE              reduce using rule 33 (expr -> expr < expr .)
    >               reduce using rule 33 (expr -> expr < expr .)
    OR              reduce using rule 33 (expr -> expr < expr .)
    AND             reduce using rule 33 (expr -> expr < expr .)
    /               reduce using rule 33 (expr -> expr < expr .)
    *               reduce using rule 33 (expr -> expr < expr .)
    -               reduce using rule 33 (expr -> expr < expr .)
    +               reduce using rule 33 (expr -> expr < expr .)
    $end            reduce using rule 33 (expr -> expr < expr .)
    )               reduce using rule 33 (expr -> expr < expr .)
    THEN            reduce using rule 33 (expr -> expr < expr .)
    ELSE            reduce using rule 33 (expr -> expr < expr .)


state 42

    (34) expr -> expr GE expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 34 (expr -> expr GE expr .)
    EQ              reduce using rule 34 (expr -> expr GE expr .)
    LE              reduce using rule 34 (expr -> expr GE expr .)
    <               reduce using rule 34 (expr -> expr GE expr .)
    GE              reduce using rule 34 (expr -> expr GE expr .)
    >               reduce using rule 34 (expr -> expr GE expr .)
    OR              reduce using rule 34 (expr -> expr GE expr .)
    AND             reduce using rule 34 (expr -> expr GE expr .)
    /               reduce using rule 34 (expr -> expr GE expr .)
    *               reduce using rule 34 (expr -> expr GE expr .)
    -               reduce using rule 34 (expr -> expr GE expr .)
    +               reduce using rule 34 (expr -> expr GE expr .)
    $end            reduce using rule 34 (expr -> expr GE expr .)
    )               reduce using rule 34 (expr -> expr GE expr .)
    THEN            reduce using rule 34 (expr -> expr GE expr .)
    ELSE            reduce using rule 34 (expr -> expr GE expr .)


state 43

    (35) expr -> expr > expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 35 (expr -> expr > expr .)
    EQ              reduce using rule 35 (expr -> expr > expr .)
    LE              reduce using rule 35 (expr -> expr > expr .)
    <               reduce using rule 35 (expr -> expr > expr .)
    GE              reduce using rule 35 (expr -> expr > expr .)
    >               reduce using rule 35 (expr -> expr > expr .)
    OR              reduce using rule 35 (expr -> expr > expr .)
    AND             reduce using rule 35 (expr -> expr > expr .)
    /               reduce using rule 35 (expr -> expr > expr .)
    *               reduce using rule 35 (expr -> expr > expr .)
    -               reduce using rule 35 (expr -> expr > expr .)
    +               reduce using rule 35 (expr -> expr > expr .)
    $end            reduce using rule 35 (expr -> expr > expr .)
    )               reduce using rule 35 (expr -> expr > expr .)
    THEN            reduce using rule 35 (expr -> expr > expr .)
    ELSE            reduce using rule 35 (expr -> expr > expr .)


state 44

    (36) expr -> expr OR expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 36 (expr -> expr OR expr .)
    EQ              reduce using rule 36 (expr -> expr OR expr .)
    OR              reduce using rule 36 (expr -> expr OR expr .)
    AND             reduce using rule 36 (expr -> expr OR expr .)
    /               reduce using rule 36 (expr -> expr OR expr .)
    *               reduce using rule 36 (expr -> expr OR expr .)
    -               reduce using rule 36 (expr -> expr OR expr .)
    +               reduce using rule 36 (expr -> expr OR expr .)
    $end            reduce using rule 36 (expr -> expr OR expr .)
    )               reduce using rule 36 (expr -> expr OR expr .)
    THEN            reduce using rule 36 (expr -> expr OR expr .)
    ELSE            reduce using rule 36 (expr -> expr OR expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23


state 45

    (37) expr -> expr AND expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 37 (expr -> expr AND expr .)
    EQ              reduce using rule 37 (expr -> expr AND expr .)
    OR              reduce using rule 37 (expr -> expr AND expr .)
    AND             reduce using rule 37 (expr -> expr AND expr .)
    /               reduce using rule 37 (expr -> expr AND expr .)
    *               reduce using rule 37 (expr -> expr AND expr .)
    -               reduce using rule 37 (expr -> expr AND expr .)
    +               reduce using rule 37 (expr -> expr AND expr .)
    $end            reduce using rule 37 (expr -> expr AND expr .)
    )               reduce using rule 37 (expr -> expr AND expr .)
    THEN            reduce using rule 37 (expr -> expr AND expr .)
    ELSE            reduce using rule 37 (expr -> expr AND expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23


state 46

    (38) expr -> expr / expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 38 (expr -> expr / expr .)
    EQ              reduce using rule 38 (expr -> expr / expr .)
    /               reduce using rule 38 (expr -> expr / expr .)
    *               reduce using rule 38 (expr -> expr / expr .)
    -               reduce using rule 38 (expr -> expr / expr .)
    +               reduce using rule 38 (expr -> expr / expr .)
    $end            reduce using rule 38 (expr -> expr / expr .)
    )               reduce using rule 38 (expr -> expr / expr .)
    THEN            reduce using rule 38 (expr -> expr / expr .)
    ELSE            reduce using rule 38 (expr -> expr / expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25


state 47

    (39) expr -> expr * expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    NE              reduce using rule 39 (expr -> expr * expr .)
    EQ              reduce using rule 39 (expr -> expr * expr .)
    /               reduce using rule 39 (expr -> expr * expr .)
    *               reduce using rule 39 (expr -> expr * expr .)
    -               reduce using rule 39 (expr -> expr * expr .)
    +               reduce using rule 39 (expr -> expr * expr .)
    $end            reduce using rule 39 (expr -> expr * expr .)
    )               reduce using rule 39 (expr -> expr * expr .)
    THEN            reduce using rule 39 (expr -> expr * expr .)
    ELSE            reduce using rule 39 (expr -> expr * expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25


state 48

    (40) expr -> expr - expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    -               reduce using rule 40 (expr -> expr - expr .)
    +               reduce using rule 40 (expr -> expr - expr .)
    $end            reduce using rule 40 (expr -> expr - expr .)
    )               reduce using rule 40 (expr -> expr - expr .)
    THEN            reduce using rule 40 (expr -> expr - expr .)
    ELSE            reduce using rule 40 (expr -> expr - expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 49

    (41) expr -> expr + expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    -               reduce using rule 41 (expr -> expr + expr .)
    +               reduce using rule 41 (expr -> expr + expr .)
    $end            reduce using rule 41 (expr -> expr + expr .)
    )               reduce using rule 41 (expr -> expr + expr .)
    THEN            reduce using rule 41 (expr -> expr + expr .)
    ELSE            reduce using rule 41 (expr -> expr + expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 50

    (2) statement -> IF ( expr . ) statement
    (12) expr -> ( expr . )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 60
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 51

    (14) expr -> IF expr EQ . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF expr EQ . expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF expr EQ . expr THEN PRINT ( STRING )
    (23) expr -> IF expr EQ . expr THEN NAME = expr
    (31) expr -> expr EQ . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 61

state 52

    (16) expr -> IF expr LE . expr THEN NAME = expr ELSE NAME = expr
    (24) expr -> IF expr LE . expr THEN NAME = expr
    (32) expr -> expr LE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 62

state 53

    (17) expr -> IF expr < . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr < . expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF expr < . expr THEN PRINT ( STRING )
    (26) expr -> IF expr < . expr THEN NAME = expr
    (33) expr -> expr < . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 63

state 54

    (19) expr -> IF expr GE . expr THEN NAME = expr ELSE NAME = expr
    (27) expr -> IF expr GE . expr THEN NAME = expr
    (34) expr -> expr GE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 64

state 55

    (20) expr -> IF expr > . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr > . expr THEN NAME = expr ELSE NAME = expr
    (28) expr -> IF expr > . expr THEN PRINT ( STRING )
    (29) expr -> IF expr > . expr THEN NAME = expr
    (35) expr -> expr > . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 65

state 56

    (4) statement -> NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    $end            reduce using rule 4 (statement -> NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 57

    (6) expr -> WHILE ( expr . ) DO PRINT ( expr )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 66
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 58

    (1) statement -> PRINT ( expr ) .
    (7) expr -> PRINT ( expr ) .
  ! reduce/reduce conflict for $end resolved using rule 7 (expr -> PRINT ( expr ) .)
    NE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    EQ              reduce using rule 7 (expr -> PRINT ( expr ) .)
    LE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    <               reduce using rule 7 (expr -> PRINT ( expr ) .)
    GE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    >               reduce using rule 7 (expr -> PRINT ( expr ) .)
    OR              reduce using rule 7 (expr -> PRINT ( expr ) .)
    AND             reduce using rule 7 (expr -> PRINT ( expr ) .)
    /               reduce using rule 7 (expr -> PRINT ( expr ) .)
    *               reduce using rule 7 (expr -> PRINT ( expr ) .)
    -               reduce using rule 7 (expr -> PRINT ( expr ) .)
    +               reduce using rule 7 (expr -> PRINT ( expr ) .)
    $end            reduce using rule 7 (expr -> PRINT ( expr ) .)


state 59

    (7) expr -> PRINT ( expr . )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 67
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 60

    (2) statement -> IF ( expr ) . statement
    (12) expr -> ( expr ) .
    (1) statement -> . PRINT ( expr )
    (2) statement -> . IF ( expr ) statement
    (3) statement -> . expr
    (4) statement -> . NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    EQ              reduce using rule 12 (expr -> ( expr ) .)
    LE              reduce using rule 12 (expr -> ( expr ) .)
    <               reduce using rule 12 (expr -> ( expr ) .)
    GE              reduce using rule 12 (expr -> ( expr ) .)
    >               reduce using rule 12 (expr -> ( expr ) .)
    NE              reduce using rule 12 (expr -> ( expr ) .)
    OR              reduce using rule 12 (expr -> ( expr ) .)
    AND             reduce using rule 12 (expr -> ( expr ) .)
    /               reduce using rule 12 (expr -> ( expr ) .)
    *               reduce using rule 12 (expr -> ( expr ) .)
    -               reduce using rule 12 (expr -> ( expr ) .)
    +               reduce using rule 12 (expr -> ( expr ) .)
    PRINT           shift and go to state 2
    IF              shift and go to state 5
    NAME            shift and go to state 6
    WHILE           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3

    expr                           shift and go to state 4
    statement                      shift and go to state 68

state 61

    (14) expr -> IF expr EQ expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF expr EQ expr . THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF expr EQ expr . THEN PRINT ( STRING )
    (23) expr -> IF expr EQ expr . THEN NAME = expr
    (31) expr -> expr EQ expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    THEN            shift and go to state 69
    EQ              reduce using rule 31 (expr -> expr EQ expr .)
    NE              reduce using rule 31 (expr -> expr EQ expr .)
    -               reduce using rule 31 (expr -> expr EQ expr .)
    +               reduce using rule 31 (expr -> expr EQ expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 62

    (16) expr -> IF expr LE expr . THEN NAME = expr ELSE NAME = expr
    (24) expr -> IF expr LE expr . THEN NAME = expr
    (32) expr -> expr LE expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    THEN            shift and go to state 70
    EQ              reduce using rule 32 (expr -> expr LE expr .)
    LE              reduce using rule 32 (expr -> expr LE expr .)
    <               reduce using rule 32 (expr -> expr LE expr .)
    GE              reduce using rule 32 (expr -> expr LE expr .)
    >               reduce using rule 32 (expr -> expr LE expr .)
    NE              reduce using rule 32 (expr -> expr LE expr .)
    OR              reduce using rule 32 (expr -> expr LE expr .)
    AND             reduce using rule 32 (expr -> expr LE expr .)
    /               reduce using rule 32 (expr -> expr LE expr .)
    *               reduce using rule 32 (expr -> expr LE expr .)
    -               reduce using rule 32 (expr -> expr LE expr .)
    +               reduce using rule 32 (expr -> expr LE expr .)


state 63

    (17) expr -> IF expr < expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr < expr . THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF expr < expr . THEN PRINT ( STRING )
    (26) expr -> IF expr < expr . THEN NAME = expr
    (33) expr -> expr < expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    THEN            shift and go to state 71
    EQ              reduce using rule 33 (expr -> expr < expr .)
    LE              reduce using rule 33 (expr -> expr < expr .)
    <               reduce using rule 33 (expr -> expr < expr .)
    GE              reduce using rule 33 (expr -> expr < expr .)
    >               reduce using rule 33 (expr -> expr < expr .)
    NE              reduce using rule 33 (expr -> expr < expr .)
    OR              reduce using rule 33 (expr -> expr < expr .)
    AND             reduce using rule 33 (expr -> expr < expr .)
    /               reduce using rule 33 (expr -> expr < expr .)
    *               reduce using rule 33 (expr -> expr < expr .)
    -               reduce using rule 33 (expr -> expr < expr .)
    +               reduce using rule 33 (expr -> expr < expr .)


state 64

    (19) expr -> IF expr GE expr . THEN NAME = expr ELSE NAME = expr
    (27) expr -> IF expr GE expr . THEN NAME = expr
    (34) expr -> expr GE expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    THEN            shift and go to state 72
    EQ              reduce using rule 34 (expr -> expr GE expr .)
    LE              reduce using rule 34 (expr -> expr GE expr .)
    <               reduce using rule 34 (expr -> expr GE expr .)
    GE              reduce using rule 34 (expr -> expr GE expr .)
    >               reduce using rule 34 (expr -> expr GE expr .)
    NE              reduce using rule 34 (expr -> expr GE expr .)
    OR              reduce using rule 34 (expr -> expr GE expr .)
    AND             reduce using rule 34 (expr -> expr GE expr .)
    /               reduce using rule 34 (expr -> expr GE expr .)
    *               reduce using rule 34 (expr -> expr GE expr .)
    -               reduce using rule 34 (expr -> expr GE expr .)
    +               reduce using rule 34 (expr -> expr GE expr .)


state 65

    (20) expr -> IF expr > expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr > expr . THEN NAME = expr ELSE NAME = expr
    (28) expr -> IF expr > expr . THEN PRINT ( STRING )
    (29) expr -> IF expr > expr . THEN NAME = expr
    (35) expr -> expr > expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    THEN            shift and go to state 73
    EQ              reduce using rule 35 (expr -> expr > expr .)
    LE              reduce using rule 35 (expr -> expr > expr .)
    <               reduce using rule 35 (expr -> expr > expr .)
    GE              reduce using rule 35 (expr -> expr > expr .)
    >               reduce using rule 35 (expr -> expr > expr .)
    NE              reduce using rule 35 (expr -> expr > expr .)
    OR              reduce using rule 35 (expr -> expr > expr .)
    AND             reduce using rule 35 (expr -> expr > expr .)
    /               reduce using rule 35 (expr -> expr > expr .)
    *               reduce using rule 35 (expr -> expr > expr .)
    -               reduce using rule 35 (expr -> expr > expr .)
    +               reduce using rule 35 (expr -> expr > expr .)


state 66

    (6) expr -> WHILE ( expr ) . DO PRINT ( expr )
    DO              shift and go to state 74


state 67

    (7) expr -> PRINT ( expr ) .
    )               reduce using rule 7 (expr -> PRINT ( expr ) .)
    NE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    EQ              reduce using rule 7 (expr -> PRINT ( expr ) .)
    LE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    <               reduce using rule 7 (expr -> PRINT ( expr ) .)
    GE              reduce using rule 7 (expr -> PRINT ( expr ) .)
    >               reduce using rule 7 (expr -> PRINT ( expr ) .)
    OR              reduce using rule 7 (expr -> PRINT ( expr ) .)
    AND             reduce using rule 7 (expr -> PRINT ( expr ) .)
    /               reduce using rule 7 (expr -> PRINT ( expr ) .)
    *               reduce using rule 7 (expr -> PRINT ( expr ) .)
    -               reduce using rule 7 (expr -> PRINT ( expr ) .)
    +               reduce using rule 7 (expr -> PRINT ( expr ) .)
    $end            reduce using rule 7 (expr -> PRINT ( expr ) .)
    THEN            reduce using rule 7 (expr -> PRINT ( expr ) .)
    ELSE            reduce using rule 7 (expr -> PRINT ( expr ) .)


state 68

    (2) statement -> IF ( expr ) statement .
    $end            reduce using rule 2 (statement -> IF ( expr ) statement .)


state 69

    (14) expr -> IF expr EQ expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> IF expr EQ expr THEN . NAME = expr ELSE NAME = expr
    (22) expr -> IF expr EQ expr THEN . PRINT ( STRING )
    (23) expr -> IF expr EQ expr THEN . NAME = expr
    PRINT           shift and go to state 75
    NAME            shift and go to state 76


state 70

    (16) expr -> IF expr LE expr THEN . NAME = expr ELSE NAME = expr
    (24) expr -> IF expr LE expr THEN . NAME = expr
    NAME            shift and go to state 77


state 71

    (17) expr -> IF expr < expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr < expr THEN . NAME = expr ELSE NAME = expr
    (25) expr -> IF expr < expr THEN . PRINT ( STRING )
    (26) expr -> IF expr < expr THEN . NAME = expr
    PRINT           shift and go to state 78
    NAME            shift and go to state 79


state 72

    (19) expr -> IF expr GE expr THEN . NAME = expr ELSE NAME = expr
    (27) expr -> IF expr GE expr THEN . NAME = expr
    NAME            shift and go to state 80


state 73

    (20) expr -> IF expr > expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr > expr THEN . NAME = expr ELSE NAME = expr
    (28) expr -> IF expr > expr THEN . PRINT ( STRING )
    (29) expr -> IF expr > expr THEN . NAME = expr
    PRINT           shift and go to state 81
    NAME            shift and go to state 82


state 74

    (6) expr -> WHILE ( expr ) DO . PRINT ( expr )
    PRINT           shift and go to state 83


state 75

    (14) expr -> IF expr EQ expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (22) expr -> IF expr EQ expr THEN PRINT . ( STRING )
    (               shift and go to state 84


state 76

    (15) expr -> IF expr EQ expr THEN NAME . = expr ELSE NAME = expr
    (23) expr -> IF expr EQ expr THEN NAME . = expr
    =               shift and go to state 85


state 77

    (16) expr -> IF expr LE expr THEN NAME . = expr ELSE NAME = expr
    (24) expr -> IF expr LE expr THEN NAME . = expr
    =               shift and go to state 86


state 78

    (17) expr -> IF expr < expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (25) expr -> IF expr < expr THEN PRINT . ( STRING )
    (               shift and go to state 87


state 79

    (18) expr -> IF expr < expr THEN NAME . = expr ELSE NAME = expr
    (26) expr -> IF expr < expr THEN NAME . = expr
    =               shift and go to state 88


state 80

    (19) expr -> IF expr GE expr THEN NAME . = expr ELSE NAME = expr
    (27) expr -> IF expr GE expr THEN NAME . = expr
    =               shift and go to state 89


state 81

    (20) expr -> IF expr > expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (28) expr -> IF expr > expr THEN PRINT . ( STRING )
    (               shift and go to state 90


state 82

    (21) expr -> IF expr > expr THEN NAME . = expr ELSE NAME = expr
    (29) expr -> IF expr > expr THEN NAME . = expr
    =               shift and go to state 91


state 83

    (6) expr -> WHILE ( expr ) DO PRINT . ( expr )
    (               shift and go to state 92


state 84

    (14) expr -> IF expr EQ expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (22) expr -> IF expr EQ expr THEN PRINT ( . STRING )
    STRING          shift and go to state 93


state 85

    (15) expr -> IF expr EQ expr THEN NAME = . expr ELSE NAME = expr
    (23) expr -> IF expr EQ expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 94

state 86

    (16) expr -> IF expr LE expr THEN NAME = . expr ELSE NAME = expr
    (24) expr -> IF expr LE expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 95

state 87

    (17) expr -> IF expr < expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (25) expr -> IF expr < expr THEN PRINT ( . STRING )
    STRING          shift and go to state 96


state 88

    (18) expr -> IF expr < expr THEN NAME = . expr ELSE NAME = expr
    (26) expr -> IF expr < expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 97

state 89

    (19) expr -> IF expr GE expr THEN NAME = . expr ELSE NAME = expr
    (27) expr -> IF expr GE expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 98

state 90

    (20) expr -> IF expr > expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (28) expr -> IF expr > expr THEN PRINT ( . STRING )
    STRING          shift and go to state 99


state 91

    (21) expr -> IF expr > expr THEN NAME = . expr ELSE NAME = expr
    (29) expr -> IF expr > expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 100

state 92

    (6) expr -> WHILE ( expr ) DO PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 101

state 93

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (22) expr -> IF expr EQ expr THEN PRINT ( STRING . )
    )               shift and go to state 102


state 94

    (15) expr -> IF expr EQ expr THEN NAME = expr . ELSE NAME = expr
    (23) expr -> IF expr EQ expr THEN NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 103
    $end            reduce using rule 23 (expr -> IF expr EQ expr THEN NAME = expr .)
    )               reduce using rule 23 (expr -> IF expr EQ expr THEN NAME = expr .)
    THEN            reduce using rule 23 (expr -> IF expr EQ expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 95

    (16) expr -> IF expr LE expr THEN NAME = expr . ELSE NAME = expr
    (24) expr -> IF expr LE expr THEN NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 104
    $end            reduce using rule 24 (expr -> IF expr LE expr THEN NAME = expr .)
    )               reduce using rule 24 (expr -> IF expr LE expr THEN NAME = expr .)
    THEN            reduce using rule 24 (expr -> IF expr LE expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 96

    (17) expr -> IF expr < expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (25) expr -> IF expr < expr THEN PRINT ( STRING . )
    )               shift and go to state 105


state 97

    (18) expr -> IF expr < expr THEN NAME = expr . ELSE NAME = expr
    (26) expr -> IF expr < expr THEN NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 106
    $end            reduce using rule 26 (expr -> IF expr < expr THEN NAME = expr .)
    )               reduce using rule 26 (expr -> IF expr < expr THEN NAME = expr .)
    THEN            reduce using rule 26 (expr -> IF expr < expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 98

    (19) expr -> IF expr GE expr THEN NAME = expr . ELSE NAME = expr
    (27) expr -> IF expr GE expr THEN NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 107
    $end            reduce using rule 27 (expr -> IF expr GE expr THEN NAME = expr .)
    )               reduce using rule 27 (expr -> IF expr GE expr THEN NAME = expr .)
    THEN            reduce using rule 27 (expr -> IF expr GE expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 99

    (20) expr -> IF expr > expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (28) expr -> IF expr > expr THEN PRINT ( STRING . )
    )               shift and go to state 108


state 100

    (21) expr -> IF expr > expr THEN NAME = expr . ELSE NAME = expr
    (29) expr -> IF expr > expr THEN NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 109
    $end            reduce using rule 29 (expr -> IF expr > expr THEN NAME = expr .)
    )               reduce using rule 29 (expr -> IF expr > expr THEN NAME = expr .)
    THEN            reduce using rule 29 (expr -> IF expr > expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 101

    (6) expr -> WHILE ( expr ) DO PRINT ( expr . )
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
    )               shift and go to state 110
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 102

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (22) expr -> IF expr EQ expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 111
    NE              reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    <               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    >               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    /               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    *               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    -               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    +               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    )               reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 22 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)


state 103

    (15) expr -> IF expr EQ expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 112


state 104

    (16) expr -> IF expr LE expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 113


state 105

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (25) expr -> IF expr < expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 114
    NE              reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    <               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    >               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    /               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    *               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    -               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    +               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    )               reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 25 (expr -> IF expr < expr THEN PRINT ( STRING ) .)


state 106

    (18) expr -> IF expr < expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 115


state 107

    (19) expr -> IF expr GE expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 116


state 108

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (28) expr -> IF expr > expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 117
    NE              reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    <               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    >               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    /               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    *               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    -               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    +               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    )               reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 28 (expr -> IF expr > expr THEN PRINT ( STRING ) .)


state 109

    (21) expr -> IF expr > expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 118


state 110

    (6) expr -> WHILE ( expr ) DO PRINT ( expr ) .
    NE              reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    EQ              reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    LE              reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    <               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    GE              reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    >               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    OR              reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    AND             reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    /               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    *               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    -               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    +               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    $end            reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    )               reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    THEN            reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    ELSE            reduce using rule 6 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)


state 111

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 119


state 112

    (15) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 120


state 113

    (16) expr -> IF expr LE expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 121


state 114

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 122


state 115

    (18) expr -> IF expr < expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 123


state 116

    (19) expr -> IF expr GE expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 124


state 117

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 125


state 118

    (21) expr -> IF expr > expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 126


state 119

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 127


state 120

    (15) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 128

state 121

    (16) expr -> IF expr LE expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 129

state 122

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 130


state 123

    (18) expr -> IF expr < expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 131

state 124

    (19) expr -> IF expr GE expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 132

state 125

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 133


state 126

    (21) expr -> IF expr > expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (7) expr -> . PRINT ( expr )
    (8) expr -> . STRING
    (9) expr -> . BOOL
    (10) expr -> . FLOAT
    (11) expr -> . NUMBER
    (12) expr -> . ( expr )
    (13) expr -> . - expr
    (14) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (15) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (16) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (17) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (23) expr -> . IF expr EQ expr THEN NAME = expr
    (24) expr -> . IF expr LE expr THEN NAME = expr
    (25) expr -> . IF expr < expr THEN PRINT ( STRING )
    (26) expr -> . IF expr < expr THEN NAME = expr
    (27) expr -> . IF expr GE expr THEN NAME = expr
    (28) expr -> . IF expr > expr THEN PRINT ( STRING )
    (29) expr -> . IF expr > expr THEN NAME = expr
    (30) expr -> . expr NE expr
    (31) expr -> . expr EQ expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . expr GE expr
    (35) expr -> . expr > expr
    (36) expr -> . expr OR expr
    (37) expr -> . expr AND expr
    (38) expr -> . expr / expr
    (39) expr -> . expr * expr
    (40) expr -> . expr - expr
    (41) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    FLOAT           shift and go to state 10
    NUMBER          shift and go to state 11
    (               shift and go to state 3
    -               shift and go to state 12
    IF              shift and go to state 17

    expr                           shift and go to state 134

state 127

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 135


state 128

    (15) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 15 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 15 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 15 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 15 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 129

    (16) expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 16 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 16 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 16 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 16 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 130

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 136


state 131

    (18) expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 18 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 18 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 18 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 18 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 132

    (19) expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 19 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 19 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 19 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 19 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 133

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 137


state 134

    (21) expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .
    (30) expr -> expr . NE expr
    (31) expr -> expr . EQ expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (34) expr -> expr . GE expr
    (35) expr -> expr . > expr
    (36) expr -> expr . OR expr
    (37) expr -> expr . AND expr
    (38) expr -> expr . / expr
    (39) expr -> expr . * expr
    (40) expr -> expr . - expr
    (41) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 21 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 21 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 21 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 21 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 135

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 138


state 136

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 139


state 137

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 140


state 138

    (14) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 14 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


state 139

    (17) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 17 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


state 140

    (20) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 20 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


Conflicts:

shift/reduce conflict for ELSE in state 94 resolved as shift
shift/reduce conflict for NE in state 94 resolved as shift
shift/reduce conflict for EQ in state 94 resolved as shift
shift/reduce conflict for LE in state 94 resolved as shift
shift/reduce conflict for < in state 94 resolved as shift
shift/reduce conflict for GE in state 94 resolved as shift
shift/reduce conflict for > in state 94 resolved as shift
shift/reduce conflict for OR in state 94 resolved as shift
shift/reduce conflict for AND in state 94 resolved as shift
shift/reduce conflict for / in state 94 resolved as shift
shift/reduce conflict for * in state 94 resolved as shift
shift/reduce conflict for - in state 94 resolved as shift
shift/reduce conflict for + in state 94 resolved as shift
shift/reduce conflict for ELSE in state 95 resolved as shift
shift/reduce conflict for NE in state 95 resolved as shift
shift/reduce conflict for EQ in state 95 resolved as shift
shift/reduce conflict for LE in state 95 resolved as shift
shift/reduce conflict for < in state 95 resolved as shift
shift/reduce conflict for GE in state 95 resolved as shift
shift/reduce conflict for > in state 95 resolved as shift
shift/reduce conflict for OR in state 95 resolved as shift
shift/reduce conflict for AND in state 95 resolved as shift
shift/reduce conflict for / in state 95 resolved as shift
shift/reduce conflict for * in state 95 resolved as shift
shift/reduce conflict for - in state 95 resolved as shift
shift/reduce conflict for + in state 95 resolved as shift
shift/reduce conflict for ELSE in state 97 resolved as shift
shift/reduce conflict for NE in state 97 resolved as shift
shift/reduce conflict for EQ in state 97 resolved as shift
shift/reduce conflict for LE in state 97 resolved as shift
shift/reduce conflict for < in state 97 resolved as shift
shift/reduce conflict for GE in state 97 resolved as shift
shift/reduce conflict for > in state 97 resolved as shift
shift/reduce conflict for OR in state 97 resolved as shift
shift/reduce conflict for AND in state 97 resolved as shift
shift/reduce conflict for / in state 97 resolved as shift
shift/reduce conflict for * in state 97 resolved as shift
shift/reduce conflict for - in state 97 resolved as shift
shift/reduce conflict for + in state 97 resolved as shift
shift/reduce conflict for ELSE in state 98 resolved as shift
shift/reduce conflict for NE in state 98 resolved as shift
shift/reduce conflict for EQ in state 98 resolved as shift
shift/reduce conflict for LE in state 98 resolved as shift
shift/reduce conflict for < in state 98 resolved as shift
shift/reduce conflict for GE in state 98 resolved as shift
shift/reduce conflict for > in state 98 resolved as shift
shift/reduce conflict for OR in state 98 resolved as shift
shift/reduce conflict for AND in state 98 resolved as shift
shift/reduce conflict for / in state 98 resolved as shift
shift/reduce conflict for * in state 98 resolved as shift
shift/reduce conflict for - in state 98 resolved as shift
shift/reduce conflict for + in state 98 resolved as shift
shift/reduce conflict for ELSE in state 100 resolved as shift
shift/reduce conflict for NE in state 100 resolved as shift
shift/reduce conflict for EQ in state 100 resolved as shift
shift/reduce conflict for LE in state 100 resolved as shift
shift/reduce conflict for < in state 100 resolved as shift
shift/reduce conflict for GE in state 100 resolved as shift
shift/reduce conflict for > in state 100 resolved as shift
shift/reduce conflict for OR in state 100 resolved as shift
shift/reduce conflict for AND in state 100 resolved as shift
shift/reduce conflict for / in state 100 resolved as shift
shift/reduce conflict for * in state 100 resolved as shift
shift/reduce conflict for - in state 100 resolved as shift
shift/reduce conflict for + in state 100 resolved as shift
shift/reduce conflict for NE in state 128 resolved as shift
shift/reduce conflict for EQ in state 128 resolved as shift
shift/reduce conflict for LE in state 128 resolved as shift
shift/reduce conflict for < in state 128 resolved as shift
shift/reduce conflict for GE in state 128 resolved as shift
shift/reduce conflict for > in state 128 resolved as shift
shift/reduce conflict for OR in state 128 resolved as shift
shift/reduce conflict for AND in state 128 resolved as shift
shift/reduce conflict for / in state 128 resolved as shift
shift/reduce conflict for * in state 128 resolved as shift
shift/reduce conflict for - in state 128 resolved as shift
shift/reduce conflict for + in state 128 resolved as shift
shift/reduce conflict for NE in state 129 resolved as shift
shift/reduce conflict for EQ in state 129 resolved as shift
shift/reduce conflict for LE in state 129 resolved as shift
shift/reduce conflict for < in state 129 resolved as shift
shift/reduce conflict for GE in state 129 resolved as shift
shift/reduce conflict for > in state 129 resolved as shift
shift/reduce conflict for OR in state 129 resolved as shift
shift/reduce conflict for AND in state 129 resolved as shift
shift/reduce conflict for / in state 129 resolved as shift
shift/reduce conflict for * in state 129 resolved as shift
shift/reduce conflict for - in state 129 resolved as shift
shift/reduce conflict for + in state 129 resolved as shift
shift/reduce conflict for NE in state 131 resolved as shift
shift/reduce conflict for EQ in state 131 resolved as shift
shift/reduce conflict for LE in state 131 resolved as shift
shift/reduce conflict for < in state 131 resolved as shift
shift/reduce conflict for GE in state 131 resolved as shift
shift/reduce conflict for > in state 131 resolved as shift
shift/reduce conflict for OR in state 131 resolved as shift
shift/reduce conflict for AND in state 131 resolved as shift
shift/reduce conflict for / in state 131 resolved as shift
shift/reduce conflict for * in state 131 resolved as shift
shift/reduce conflict for - in state 131 resolved as shift
shift/reduce conflict for + in state 131 resolved as shift
shift/reduce conflict for NE in state 132 resolved as shift
shift/reduce conflict for EQ in state 132 resolved as shift
shift/reduce conflict for LE in state 132 resolved as shift
shift/reduce conflict for < in state 132 resolved as shift
shift/reduce conflict for GE in state 132 resolved as shift
shift/reduce conflict for > in state 132 resolved as shift
shift/reduce conflict for OR in state 132 resolved as shift
shift/reduce conflict for AND in state 132 resolved as shift
shift/reduce conflict for / in state 132 resolved as shift
shift/reduce conflict for * in state 132 resolved as shift
shift/reduce conflict for - in state 132 resolved as shift
shift/reduce conflict for + in state 132 resolved as shift
shift/reduce conflict for NE in state 134 resolved as shift
shift/reduce conflict for EQ in state 134 resolved as shift
shift/reduce conflict for LE in state 134 resolved as shift
shift/reduce conflict for < in state 134 resolved as shift
shift/reduce conflict for GE in state 134 resolved as shift
shift/reduce conflict for > in state 134 resolved as shift
shift/reduce conflict for OR in state 134 resolved as shift
shift/reduce conflict for AND in state 134 resolved as shift
shift/reduce conflict for / in state 134 resolved as shift
shift/reduce conflict for * in state 134 resolved as shift
shift/reduce conflict for - in state 134 resolved as shift
shift/reduce conflict for + in state 134 resolved as shift
reduce/reduce conflict in state 58 resolved using rule expr -> PRINT ( expr )  [precedence=left, level=8]
rejected rule (statement -> PRINT ( expr )  [precedence=left, level=8]) in state 58
Rule (statement -> PRINT ( expr )  [precedence=left, level=8]) is never reduced