Grammar:

Rule 0     S' -> statement
Rule 1     statement -> PRINT ( expr )  [precedence=left, level=8]
Rule 2     statement -> IF ( expr ) statement  [precedence=left, level=8]
Rule 3     statement -> expr
Rule 4     statement -> NAME = expr
Rule 5     expr -> NAME
Rule 6     expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )  [precedence=left, level=8]
Rule 7     expr -> WHILE ( expr ) DO expr NAME = expr - expr  [precedence=left, level=1]
Rule 8     expr -> WHILE ( expr ) DO PRINT ( NUMBER )  [precedence=left, level=8]
Rule 9     expr -> WHILE ( expr ) DO PRINT ( expr )  [precedence=left, level=8]
Rule 10    expr -> PRINT ( expr )  [precedence=left, level=8]
Rule 11    expr -> STRING
Rule 12    expr -> BOOL
Rule 13    expr -> FLOAT
Rule 14    expr -> NUMBER
Rule 15    expr -> ( expr )  [precedence=left, level=8]
Rule 16    expr -> - expr  [precedence=right, level=6]
Rule 17    expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 18    expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr
Rule 19    expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr
Rule 20    expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 21    expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr
Rule 22    expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr
Rule 23    expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )  [precedence=left, level=8]
Rule 24    expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr
Rule 25    expr -> IF expr EQ expr THEN PRINT ( NUMBER )  [precedence=left, level=8]
Rule 26    expr -> IF expr EQ expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 27    expr -> IF expr EQ expr THEN NAME = expr
Rule 28    expr -> IF expr LE expr THEN NAME = expr
Rule 29    expr -> IF expr < expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 30    expr -> IF expr < expr THEN NAME = expr
Rule 31    expr -> IF expr GE expr THEN NAME = expr
Rule 32    expr -> IF expr > expr THEN PRINT ( STRING )  [precedence=left, level=8]
Rule 33    expr -> IF expr > expr THEN NAME = expr
Rule 34    expr -> expr NE expr  [precedence=left, level=2]
Rule 35    expr -> expr EQ expr  [precedence=left, level=2]
Rule 36    expr -> expr LE expr  [precedence=nonassoc, level=5]
Rule 37    expr -> expr < expr  [precedence=nonassoc, level=5]
Rule 38    expr -> expr GE expr  [precedence=nonassoc, level=5]
Rule 39    expr -> expr > expr  [precedence=nonassoc, level=5]
Rule 40    expr -> expr OR expr  [precedence=left, level=4]
Rule 41    expr -> expr AND expr  [precedence=left, level=4]
Rule 42    expr -> expr / expr  [precedence=left, level=3]
Rule 43    expr -> expr * expr  [precedence=left, level=3]
Rule 44    expr -> expr - expr  [precedence=left, level=1]
Rule 45    expr -> expr + expr  [precedence=left, level=1]

Terminals, with rules where they appear:

(                    : 1 2 6 6 7 8 8 9 9 10 15 17 17 20 20 23 23 25 26 29 32
)                    : 1 2 6 6 7 8 8 9 9 10 15 17 17 20 20 23 23 25 26 29 32
*                    : 6 43
+                    : 45
-                    : 6 7 16 44
/                    : 42
<                    : 20 21 29 30 37
=                    : 4 6 6 7 18 18 19 19 21 21 22 22 24 24 27 28 30 31 33
>                    : 23 24 32 33 39
AND                  : 41
BOOL                 : 12
DO                   : 6 7 8 9
ELSE                 : 17 18 19 20 21 22 23 24
EQ                   : 17 18 25 26 27 35
FLOAT                : 13
GE                   : 22 31 38
IF                   : 2 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
LE                   : 19 28 36
NAME                 : 4 5 6 6 6 7 18 18 19 19 21 21 22 22 24 24 27 28 30 31 33
NE                   : 34
NUMBER               : 8 14 25
OR                   : 40
PRINT                : 1 6 8 9 10 17 17 20 20 23 23 25 26 29 32
STRING               : 11 17 17 20 20 23 23 26 29 32
THEN                 : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
WHILE                : 6 7 8 9
error                : 

Nonterminals, with rules where they appear:

expr                 : 1 2 3 4 6 6 6 6 6 7 7 7 7 8 9 9 10 15 16 17 17 18 18 18 18 19 19 19 19 20 20 21 21 21 21 22 22 22 22 23 23 24 24 24 24 25 25 26 26 27 27 27 28 28 28 29 29 30 30 30 31 31 31 32 32 33 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45
statement            : 2 0


state 0

    (0) S' -> . statement
    (1) statement -> . PRINT ( expr )
    (2) statement -> . IF ( expr ) statement
    (3) statement -> . expr
    (4) statement -> . NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    PRINT           shift and go to state 2
    IF              shift and go to state 5
    NAME            shift and go to state 6
    WHILE           shift and go to state 7
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8

    statement                      shift and go to state 1
    expr                           shift and go to state 4

state 1

    (0) S' -> statement .


state 2

    (1) statement -> PRINT . ( expr )
    (10) expr -> PRINT . ( expr )
    (               shift and go to state 13


state 3

    (15) expr -> ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 14

state 4

    (3) statement -> expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    $end            reduce using rule 3 (statement -> expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 5

    (2) statement -> IF . ( expr ) statement
    (17) expr -> IF . expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF . expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF . expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF . expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF . expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF . expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> IF . expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF . expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF . expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> IF . expr EQ expr THEN PRINT ( STRING )
    (27) expr -> IF . expr EQ expr THEN NAME = expr
    (28) expr -> IF . expr LE expr THEN NAME = expr
    (29) expr -> IF . expr < expr THEN PRINT ( STRING )
    (30) expr -> IF . expr < expr THEN NAME = expr
    (31) expr -> IF . expr GE expr THEN NAME = expr
    (32) expr -> IF . expr > expr THEN PRINT ( STRING )
    (33) expr -> IF . expr > expr THEN NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    (               shift and go to state 30
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 31

state 6

    (4) statement -> NAME . = expr
    (5) expr -> NAME .
    =               shift and go to state 32
    NE              reduce using rule 5 (expr -> NAME .)
    EQ              reduce using rule 5 (expr -> NAME .)
    LE              reduce using rule 5 (expr -> NAME .)
    <               reduce using rule 5 (expr -> NAME .)
    GE              reduce using rule 5 (expr -> NAME .)
    >               reduce using rule 5 (expr -> NAME .)
    OR              reduce using rule 5 (expr -> NAME .)
    AND             reduce using rule 5 (expr -> NAME .)
    /               reduce using rule 5 (expr -> NAME .)
    *               reduce using rule 5 (expr -> NAME .)
    -               reduce using rule 5 (expr -> NAME .)
    +               reduce using rule 5 (expr -> NAME .)
    $end            reduce using rule 5 (expr -> NAME .)


state 7

    (6) expr -> WHILE . ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> WHILE . ( expr ) DO expr NAME = expr - expr
    (8) expr -> WHILE . ( expr ) DO PRINT ( NUMBER )
    (9) expr -> WHILE . ( expr ) DO PRINT ( expr )
    (               shift and go to state 33


state 8

    (16) expr -> - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 34

state 9

    (14) expr -> NUMBER .
    NE              reduce using rule 14 (expr -> NUMBER .)
    EQ              reduce using rule 14 (expr -> NUMBER .)
    LE              reduce using rule 14 (expr -> NUMBER .)
    <               reduce using rule 14 (expr -> NUMBER .)
    GE              reduce using rule 14 (expr -> NUMBER .)
    >               reduce using rule 14 (expr -> NUMBER .)
    OR              reduce using rule 14 (expr -> NUMBER .)
    AND             reduce using rule 14 (expr -> NUMBER .)
    /               reduce using rule 14 (expr -> NUMBER .)
    *               reduce using rule 14 (expr -> NUMBER .)
    -               reduce using rule 14 (expr -> NUMBER .)
    +               reduce using rule 14 (expr -> NUMBER .)
    $end            reduce using rule 14 (expr -> NUMBER .)
    )               reduce using rule 14 (expr -> NUMBER .)
    THEN            reduce using rule 14 (expr -> NUMBER .)
    NAME            reduce using rule 14 (expr -> NUMBER .)
    ELSE            reduce using rule 14 (expr -> NUMBER .)
    PRINT           reduce using rule 14 (expr -> NUMBER .)


state 10

    (11) expr -> STRING .
    NE              reduce using rule 11 (expr -> STRING .)
    EQ              reduce using rule 11 (expr -> STRING .)
    LE              reduce using rule 11 (expr -> STRING .)
    <               reduce using rule 11 (expr -> STRING .)
    GE              reduce using rule 11 (expr -> STRING .)
    >               reduce using rule 11 (expr -> STRING .)
    OR              reduce using rule 11 (expr -> STRING .)
    AND             reduce using rule 11 (expr -> STRING .)
    /               reduce using rule 11 (expr -> STRING .)
    *               reduce using rule 11 (expr -> STRING .)
    -               reduce using rule 11 (expr -> STRING .)
    +               reduce using rule 11 (expr -> STRING .)
    $end            reduce using rule 11 (expr -> STRING .)
    )               reduce using rule 11 (expr -> STRING .)
    THEN            reduce using rule 11 (expr -> STRING .)
    NAME            reduce using rule 11 (expr -> STRING .)
    ELSE            reduce using rule 11 (expr -> STRING .)
    PRINT           reduce using rule 11 (expr -> STRING .)


state 11

    (12) expr -> BOOL .
    NE              reduce using rule 12 (expr -> BOOL .)
    EQ              reduce using rule 12 (expr -> BOOL .)
    LE              reduce using rule 12 (expr -> BOOL .)
    <               reduce using rule 12 (expr -> BOOL .)
    GE              reduce using rule 12 (expr -> BOOL .)
    >               reduce using rule 12 (expr -> BOOL .)
    OR              reduce using rule 12 (expr -> BOOL .)
    AND             reduce using rule 12 (expr -> BOOL .)
    /               reduce using rule 12 (expr -> BOOL .)
    *               reduce using rule 12 (expr -> BOOL .)
    -               reduce using rule 12 (expr -> BOOL .)
    +               reduce using rule 12 (expr -> BOOL .)
    $end            reduce using rule 12 (expr -> BOOL .)
    )               reduce using rule 12 (expr -> BOOL .)
    THEN            reduce using rule 12 (expr -> BOOL .)
    NAME            reduce using rule 12 (expr -> BOOL .)
    ELSE            reduce using rule 12 (expr -> BOOL .)
    PRINT           reduce using rule 12 (expr -> BOOL .)


state 12

    (13) expr -> FLOAT .
    NE              reduce using rule 13 (expr -> FLOAT .)
    EQ              reduce using rule 13 (expr -> FLOAT .)
    LE              reduce using rule 13 (expr -> FLOAT .)
    <               reduce using rule 13 (expr -> FLOAT .)
    GE              reduce using rule 13 (expr -> FLOAT .)
    >               reduce using rule 13 (expr -> FLOAT .)
    OR              reduce using rule 13 (expr -> FLOAT .)
    AND             reduce using rule 13 (expr -> FLOAT .)
    /               reduce using rule 13 (expr -> FLOAT .)
    *               reduce using rule 13 (expr -> FLOAT .)
    -               reduce using rule 13 (expr -> FLOAT .)
    +               reduce using rule 13 (expr -> FLOAT .)
    $end            reduce using rule 13 (expr -> FLOAT .)
    )               reduce using rule 13 (expr -> FLOAT .)
    THEN            reduce using rule 13 (expr -> FLOAT .)
    NAME            reduce using rule 13 (expr -> FLOAT .)
    ELSE            reduce using rule 13 (expr -> FLOAT .)
    PRINT           reduce using rule 13 (expr -> FLOAT .)


state 13

    (1) statement -> PRINT ( . expr )
    (10) expr -> PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 35

state 14

    (15) expr -> ( expr . )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 36
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 15

    (5) expr -> NAME .
    )               reduce using rule 5 (expr -> NAME .)
    NE              reduce using rule 5 (expr -> NAME .)
    EQ              reduce using rule 5 (expr -> NAME .)
    LE              reduce using rule 5 (expr -> NAME .)
    <               reduce using rule 5 (expr -> NAME .)
    GE              reduce using rule 5 (expr -> NAME .)
    >               reduce using rule 5 (expr -> NAME .)
    OR              reduce using rule 5 (expr -> NAME .)
    AND             reduce using rule 5 (expr -> NAME .)
    /               reduce using rule 5 (expr -> NAME .)
    *               reduce using rule 5 (expr -> NAME .)
    -               reduce using rule 5 (expr -> NAME .)
    +               reduce using rule 5 (expr -> NAME .)
    $end            reduce using rule 5 (expr -> NAME .)
    THEN            reduce using rule 5 (expr -> NAME .)
    NAME            reduce using rule 5 (expr -> NAME .)
    ELSE            reduce using rule 5 (expr -> NAME .)
    PRINT           reduce using rule 5 (expr -> NAME .)


state 16

    (10) expr -> PRINT . ( expr )
    (               shift and go to state 37


state 17

    (17) expr -> IF . expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF . expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF . expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF . expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF . expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF . expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> IF . expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF . expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF . expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> IF . expr EQ expr THEN PRINT ( STRING )
    (27) expr -> IF . expr EQ expr THEN NAME = expr
    (28) expr -> IF . expr LE expr THEN NAME = expr
    (29) expr -> IF . expr < expr THEN PRINT ( STRING )
    (30) expr -> IF . expr < expr THEN NAME = expr
    (31) expr -> IF . expr GE expr THEN NAME = expr
    (32) expr -> IF . expr > expr THEN PRINT ( STRING )
    (33) expr -> IF . expr > expr THEN NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 31

state 18

    (34) expr -> expr NE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 38

state 19

    (35) expr -> expr EQ . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 39

state 20

    (36) expr -> expr LE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 40

state 21

    (37) expr -> expr < . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 41

state 22

    (38) expr -> expr GE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 42

state 23

    (39) expr -> expr > . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 43

state 24

    (40) expr -> expr OR . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 44

state 25

    (41) expr -> expr AND . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 45

state 26

    (42) expr -> expr / . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 46

state 27

    (43) expr -> expr * . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 47

state 28

    (44) expr -> expr - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 48

state 29

    (45) expr -> expr + . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 49

state 30

    (2) statement -> IF ( . expr ) statement
    (15) expr -> ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 50

state 31

    (17) expr -> IF expr . EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr . EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> IF expr . LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> IF expr . < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr . < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> IF expr . GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> IF expr . > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF expr . > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF expr . EQ expr THEN PRINT ( NUMBER )
    (26) expr -> IF expr . EQ expr THEN PRINT ( STRING )
    (27) expr -> IF expr . EQ expr THEN NAME = expr
    (28) expr -> IF expr . LE expr THEN NAME = expr
    (29) expr -> IF expr . < expr THEN PRINT ( STRING )
    (30) expr -> IF expr . < expr THEN NAME = expr
    (31) expr -> IF expr . GE expr THEN NAME = expr
    (32) expr -> IF expr . > expr THEN PRINT ( STRING )
    (33) expr -> IF expr . > expr THEN NAME = expr
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    EQ              shift and go to state 51
    LE              shift and go to state 52
    <               shift and go to state 53
    GE              shift and go to state 54
    >               shift and go to state 55
    NE              shift and go to state 18
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 32

    (4) statement -> NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 56

state 33

    (6) expr -> WHILE ( . expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> WHILE ( . expr ) DO expr NAME = expr - expr
    (8) expr -> WHILE ( . expr ) DO PRINT ( NUMBER )
    (9) expr -> WHILE ( . expr ) DO PRINT ( expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 57

state 34

    (16) expr -> - expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 16 (expr -> - expr .)
    EQ              reduce using rule 16 (expr -> - expr .)
    LE              reduce using rule 16 (expr -> - expr .)
    <               reduce using rule 16 (expr -> - expr .)
    GE              reduce using rule 16 (expr -> - expr .)
    >               reduce using rule 16 (expr -> - expr .)
    OR              reduce using rule 16 (expr -> - expr .)
    AND             reduce using rule 16 (expr -> - expr .)
    /               reduce using rule 16 (expr -> - expr .)
    *               reduce using rule 16 (expr -> - expr .)
    -               reduce using rule 16 (expr -> - expr .)
    +               reduce using rule 16 (expr -> - expr .)
    $end            reduce using rule 16 (expr -> - expr .)
    )               reduce using rule 16 (expr -> - expr .)
    THEN            reduce using rule 16 (expr -> - expr .)
    NAME            reduce using rule 16 (expr -> - expr .)
    ELSE            reduce using rule 16 (expr -> - expr .)
    PRINT           reduce using rule 16 (expr -> - expr .)


state 35

    (1) statement -> PRINT ( expr . )
    (10) expr -> PRINT ( expr . )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 58
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 36

    (15) expr -> ( expr ) .
    NE              reduce using rule 15 (expr -> ( expr ) .)
    EQ              reduce using rule 15 (expr -> ( expr ) .)
    LE              reduce using rule 15 (expr -> ( expr ) .)
    <               reduce using rule 15 (expr -> ( expr ) .)
    GE              reduce using rule 15 (expr -> ( expr ) .)
    >               reduce using rule 15 (expr -> ( expr ) .)
    OR              reduce using rule 15 (expr -> ( expr ) .)
    AND             reduce using rule 15 (expr -> ( expr ) .)
    /               reduce using rule 15 (expr -> ( expr ) .)
    *               reduce using rule 15 (expr -> ( expr ) .)
    -               reduce using rule 15 (expr -> ( expr ) .)
    +               reduce using rule 15 (expr -> ( expr ) .)
    $end            reduce using rule 15 (expr -> ( expr ) .)
    )               reduce using rule 15 (expr -> ( expr ) .)
    THEN            reduce using rule 15 (expr -> ( expr ) .)
    NAME            reduce using rule 15 (expr -> ( expr ) .)
    ELSE            reduce using rule 15 (expr -> ( expr ) .)
    PRINT           reduce using rule 15 (expr -> ( expr ) .)


state 37

    (10) expr -> PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 59

state 38

    (34) expr -> expr NE expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 34 (expr -> expr NE expr .)
    EQ              reduce using rule 34 (expr -> expr NE expr .)
    -               reduce using rule 34 (expr -> expr NE expr .)
    +               reduce using rule 34 (expr -> expr NE expr .)
    $end            reduce using rule 34 (expr -> expr NE expr .)
    )               reduce using rule 34 (expr -> expr NE expr .)
    THEN            reduce using rule 34 (expr -> expr NE expr .)
    NAME            reduce using rule 34 (expr -> expr NE expr .)
    ELSE            reduce using rule 34 (expr -> expr NE expr .)
    PRINT           reduce using rule 34 (expr -> expr NE expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 39

    (35) expr -> expr EQ expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 35 (expr -> expr EQ expr .)
    EQ              reduce using rule 35 (expr -> expr EQ expr .)
    -               reduce using rule 35 (expr -> expr EQ expr .)
    +               reduce using rule 35 (expr -> expr EQ expr .)
    $end            reduce using rule 35 (expr -> expr EQ expr .)
    )               reduce using rule 35 (expr -> expr EQ expr .)
    THEN            reduce using rule 35 (expr -> expr EQ expr .)
    NAME            reduce using rule 35 (expr -> expr EQ expr .)
    ELSE            reduce using rule 35 (expr -> expr EQ expr .)
    PRINT           reduce using rule 35 (expr -> expr EQ expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 40

    (36) expr -> expr LE expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 36 (expr -> expr LE expr .)
    EQ              reduce using rule 36 (expr -> expr LE expr .)
    LE              reduce using rule 36 (expr -> expr LE expr .)
    <               reduce using rule 36 (expr -> expr LE expr .)
    GE              reduce using rule 36 (expr -> expr LE expr .)
    >               reduce using rule 36 (expr -> expr LE expr .)
    OR              reduce using rule 36 (expr -> expr LE expr .)
    AND             reduce using rule 36 (expr -> expr LE expr .)
    /               reduce using rule 36 (expr -> expr LE expr .)
    *               reduce using rule 36 (expr -> expr LE expr .)
    -               reduce using rule 36 (expr -> expr LE expr .)
    +               reduce using rule 36 (expr -> expr LE expr .)
    $end            reduce using rule 36 (expr -> expr LE expr .)
    )               reduce using rule 36 (expr -> expr LE expr .)
    THEN            reduce using rule 36 (expr -> expr LE expr .)
    NAME            reduce using rule 36 (expr -> expr LE expr .)
    ELSE            reduce using rule 36 (expr -> expr LE expr .)
    PRINT           reduce using rule 36 (expr -> expr LE expr .)


state 41

    (37) expr -> expr < expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 37 (expr -> expr < expr .)
    EQ              reduce using rule 37 (expr -> expr < expr .)
    LE              reduce using rule 37 (expr -> expr < expr .)
    <               reduce using rule 37 (expr -> expr < expr .)
    GE              reduce using rule 37 (expr -> expr < expr .)
    >               reduce using rule 37 (expr -> expr < expr .)
    OR              reduce using rule 37 (expr -> expr < expr .)
    AND             reduce using rule 37 (expr -> expr < expr .)
    /               reduce using rule 37 (expr -> expr < expr .)
    *               reduce using rule 37 (expr -> expr < expr .)
    -               reduce using rule 37 (expr -> expr < expr .)
    +               reduce using rule 37 (expr -> expr < expr .)
    $end            reduce using rule 37 (expr -> expr < expr .)
    )               reduce using rule 37 (expr -> expr < expr .)
    THEN            reduce using rule 37 (expr -> expr < expr .)
    NAME            reduce using rule 37 (expr -> expr < expr .)
    ELSE            reduce using rule 37 (expr -> expr < expr .)
    PRINT           reduce using rule 37 (expr -> expr < expr .)


state 42

    (38) expr -> expr GE expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 38 (expr -> expr GE expr .)
    EQ              reduce using rule 38 (expr -> expr GE expr .)
    LE              reduce using rule 38 (expr -> expr GE expr .)
    <               reduce using rule 38 (expr -> expr GE expr .)
    GE              reduce using rule 38 (expr -> expr GE expr .)
    >               reduce using rule 38 (expr -> expr GE expr .)
    OR              reduce using rule 38 (expr -> expr GE expr .)
    AND             reduce using rule 38 (expr -> expr GE expr .)
    /               reduce using rule 38 (expr -> expr GE expr .)
    *               reduce using rule 38 (expr -> expr GE expr .)
    -               reduce using rule 38 (expr -> expr GE expr .)
    +               reduce using rule 38 (expr -> expr GE expr .)
    $end            reduce using rule 38 (expr -> expr GE expr .)
    )               reduce using rule 38 (expr -> expr GE expr .)
    THEN            reduce using rule 38 (expr -> expr GE expr .)
    NAME            reduce using rule 38 (expr -> expr GE expr .)
    ELSE            reduce using rule 38 (expr -> expr GE expr .)
    PRINT           reduce using rule 38 (expr -> expr GE expr .)


state 43

    (39) expr -> expr > expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 39 (expr -> expr > expr .)
    EQ              reduce using rule 39 (expr -> expr > expr .)
    LE              reduce using rule 39 (expr -> expr > expr .)
    <               reduce using rule 39 (expr -> expr > expr .)
    GE              reduce using rule 39 (expr -> expr > expr .)
    >               reduce using rule 39 (expr -> expr > expr .)
    OR              reduce using rule 39 (expr -> expr > expr .)
    AND             reduce using rule 39 (expr -> expr > expr .)
    /               reduce using rule 39 (expr -> expr > expr .)
    *               reduce using rule 39 (expr -> expr > expr .)
    -               reduce using rule 39 (expr -> expr > expr .)
    +               reduce using rule 39 (expr -> expr > expr .)
    $end            reduce using rule 39 (expr -> expr > expr .)
    )               reduce using rule 39 (expr -> expr > expr .)
    THEN            reduce using rule 39 (expr -> expr > expr .)
    NAME            reduce using rule 39 (expr -> expr > expr .)
    ELSE            reduce using rule 39 (expr -> expr > expr .)
    PRINT           reduce using rule 39 (expr -> expr > expr .)


state 44

    (40) expr -> expr OR expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 40 (expr -> expr OR expr .)
    EQ              reduce using rule 40 (expr -> expr OR expr .)
    OR              reduce using rule 40 (expr -> expr OR expr .)
    AND             reduce using rule 40 (expr -> expr OR expr .)
    /               reduce using rule 40 (expr -> expr OR expr .)
    *               reduce using rule 40 (expr -> expr OR expr .)
    -               reduce using rule 40 (expr -> expr OR expr .)
    +               reduce using rule 40 (expr -> expr OR expr .)
    $end            reduce using rule 40 (expr -> expr OR expr .)
    )               reduce using rule 40 (expr -> expr OR expr .)
    THEN            reduce using rule 40 (expr -> expr OR expr .)
    NAME            reduce using rule 40 (expr -> expr OR expr .)
    ELSE            reduce using rule 40 (expr -> expr OR expr .)
    PRINT           reduce using rule 40 (expr -> expr OR expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23


state 45

    (41) expr -> expr AND expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 41 (expr -> expr AND expr .)
    EQ              reduce using rule 41 (expr -> expr AND expr .)
    OR              reduce using rule 41 (expr -> expr AND expr .)
    AND             reduce using rule 41 (expr -> expr AND expr .)
    /               reduce using rule 41 (expr -> expr AND expr .)
    *               reduce using rule 41 (expr -> expr AND expr .)
    -               reduce using rule 41 (expr -> expr AND expr .)
    +               reduce using rule 41 (expr -> expr AND expr .)
    $end            reduce using rule 41 (expr -> expr AND expr .)
    )               reduce using rule 41 (expr -> expr AND expr .)
    THEN            reduce using rule 41 (expr -> expr AND expr .)
    NAME            reduce using rule 41 (expr -> expr AND expr .)
    ELSE            reduce using rule 41 (expr -> expr AND expr .)
    PRINT           reduce using rule 41 (expr -> expr AND expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23


state 46

    (42) expr -> expr / expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 42 (expr -> expr / expr .)
    EQ              reduce using rule 42 (expr -> expr / expr .)
    /               reduce using rule 42 (expr -> expr / expr .)
    *               reduce using rule 42 (expr -> expr / expr .)
    -               reduce using rule 42 (expr -> expr / expr .)
    +               reduce using rule 42 (expr -> expr / expr .)
    $end            reduce using rule 42 (expr -> expr / expr .)
    )               reduce using rule 42 (expr -> expr / expr .)
    THEN            reduce using rule 42 (expr -> expr / expr .)
    NAME            reduce using rule 42 (expr -> expr / expr .)
    ELSE            reduce using rule 42 (expr -> expr / expr .)
    PRINT           reduce using rule 42 (expr -> expr / expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25


state 47

    (43) expr -> expr * expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NE              reduce using rule 43 (expr -> expr * expr .)
    EQ              reduce using rule 43 (expr -> expr * expr .)
    /               reduce using rule 43 (expr -> expr * expr .)
    *               reduce using rule 43 (expr -> expr * expr .)
    -               reduce using rule 43 (expr -> expr * expr .)
    +               reduce using rule 43 (expr -> expr * expr .)
    $end            reduce using rule 43 (expr -> expr * expr .)
    )               reduce using rule 43 (expr -> expr * expr .)
    THEN            reduce using rule 43 (expr -> expr * expr .)
    NAME            reduce using rule 43 (expr -> expr * expr .)
    ELSE            reduce using rule 43 (expr -> expr * expr .)
    PRINT           reduce using rule 43 (expr -> expr * expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25


state 48

    (44) expr -> expr - expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    -               reduce using rule 44 (expr -> expr - expr .)
    +               reduce using rule 44 (expr -> expr - expr .)
    $end            reduce using rule 44 (expr -> expr - expr .)
    )               reduce using rule 44 (expr -> expr - expr .)
    THEN            reduce using rule 44 (expr -> expr - expr .)
    NAME            reduce using rule 44 (expr -> expr - expr .)
    ELSE            reduce using rule 44 (expr -> expr - expr .)
    PRINT           reduce using rule 44 (expr -> expr - expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 49

    (45) expr -> expr + expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    -               reduce using rule 45 (expr -> expr + expr .)
    +               reduce using rule 45 (expr -> expr + expr .)
    $end            reduce using rule 45 (expr -> expr + expr .)
    )               reduce using rule 45 (expr -> expr + expr .)
    THEN            reduce using rule 45 (expr -> expr + expr .)
    NAME            reduce using rule 45 (expr -> expr + expr .)
    ELSE            reduce using rule 45 (expr -> expr + expr .)
    PRINT           reduce using rule 45 (expr -> expr + expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 50

    (2) statement -> IF ( expr . ) statement
    (15) expr -> ( expr . )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 60
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 51

    (17) expr -> IF expr EQ . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr EQ . expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF expr EQ . expr THEN PRINT ( NUMBER )
    (26) expr -> IF expr EQ . expr THEN PRINT ( STRING )
    (27) expr -> IF expr EQ . expr THEN NAME = expr
    (35) expr -> expr EQ . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 61

state 52

    (19) expr -> IF expr LE . expr THEN NAME = expr ELSE NAME = expr
    (28) expr -> IF expr LE . expr THEN NAME = expr
    (36) expr -> expr LE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 62

state 53

    (20) expr -> IF expr < . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr < . expr THEN NAME = expr ELSE NAME = expr
    (29) expr -> IF expr < . expr THEN PRINT ( STRING )
    (30) expr -> IF expr < . expr THEN NAME = expr
    (37) expr -> expr < . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 63

state 54

    (22) expr -> IF expr GE . expr THEN NAME = expr ELSE NAME = expr
    (31) expr -> IF expr GE . expr THEN NAME = expr
    (38) expr -> expr GE . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 64

state 55

    (23) expr -> IF expr > . expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF expr > . expr THEN NAME = expr ELSE NAME = expr
    (32) expr -> IF expr > . expr THEN PRINT ( STRING )
    (33) expr -> IF expr > . expr THEN NAME = expr
    (39) expr -> expr > . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 65

state 56

    (4) statement -> NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    $end            reduce using rule 4 (statement -> NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 57

    (6) expr -> WHILE ( expr . ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> WHILE ( expr . ) DO expr NAME = expr - expr
    (8) expr -> WHILE ( expr . ) DO PRINT ( NUMBER )
    (9) expr -> WHILE ( expr . ) DO PRINT ( expr )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 66
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 58

    (1) statement -> PRINT ( expr ) .
    (10) expr -> PRINT ( expr ) .
  ! reduce/reduce conflict for $end resolved using rule 10 (expr -> PRINT ( expr ) .)
    NE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    EQ              reduce using rule 10 (expr -> PRINT ( expr ) .)
    LE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    <               reduce using rule 10 (expr -> PRINT ( expr ) .)
    GE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    >               reduce using rule 10 (expr -> PRINT ( expr ) .)
    OR              reduce using rule 10 (expr -> PRINT ( expr ) .)
    AND             reduce using rule 10 (expr -> PRINT ( expr ) .)
    /               reduce using rule 10 (expr -> PRINT ( expr ) .)
    *               reduce using rule 10 (expr -> PRINT ( expr ) .)
    -               reduce using rule 10 (expr -> PRINT ( expr ) .)
    +               reduce using rule 10 (expr -> PRINT ( expr ) .)
    $end            reduce using rule 10 (expr -> PRINT ( expr ) .)


state 59

    (10) expr -> PRINT ( expr . )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 67
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 60

    (2) statement -> IF ( expr ) . statement
    (15) expr -> ( expr ) .
    (1) statement -> . PRINT ( expr )
    (2) statement -> . IF ( expr ) statement
    (3) statement -> . expr
    (4) statement -> . NAME = expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    EQ              reduce using rule 15 (expr -> ( expr ) .)
    LE              reduce using rule 15 (expr -> ( expr ) .)
    <               reduce using rule 15 (expr -> ( expr ) .)
    GE              reduce using rule 15 (expr -> ( expr ) .)
    >               reduce using rule 15 (expr -> ( expr ) .)
    NE              reduce using rule 15 (expr -> ( expr ) .)
    OR              reduce using rule 15 (expr -> ( expr ) .)
    AND             reduce using rule 15 (expr -> ( expr ) .)
    /               reduce using rule 15 (expr -> ( expr ) .)
    *               reduce using rule 15 (expr -> ( expr ) .)
    -               reduce using rule 15 (expr -> ( expr ) .)
    +               reduce using rule 15 (expr -> ( expr ) .)
    PRINT           shift and go to state 2
    IF              shift and go to state 5
    NAME            shift and go to state 6
    WHILE           shift and go to state 7
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3

    expr                           shift and go to state 4
    statement                      shift and go to state 68

state 61

    (17) expr -> IF expr EQ expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr EQ expr . THEN NAME = expr ELSE NAME = expr
    (25) expr -> IF expr EQ expr . THEN PRINT ( NUMBER )
    (26) expr -> IF expr EQ expr . THEN PRINT ( STRING )
    (27) expr -> IF expr EQ expr . THEN NAME = expr
    (35) expr -> expr EQ expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    THEN            shift and go to state 69
    EQ              reduce using rule 35 (expr -> expr EQ expr .)
    NE              reduce using rule 35 (expr -> expr EQ expr .)
    -               reduce using rule 35 (expr -> expr EQ expr .)
    +               reduce using rule 35 (expr -> expr EQ expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 62

    (19) expr -> IF expr LE expr . THEN NAME = expr ELSE NAME = expr
    (28) expr -> IF expr LE expr . THEN NAME = expr
    (36) expr -> expr LE expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    THEN            shift and go to state 70
    EQ              reduce using rule 36 (expr -> expr LE expr .)
    LE              reduce using rule 36 (expr -> expr LE expr .)
    <               reduce using rule 36 (expr -> expr LE expr .)
    GE              reduce using rule 36 (expr -> expr LE expr .)
    >               reduce using rule 36 (expr -> expr LE expr .)
    NE              reduce using rule 36 (expr -> expr LE expr .)
    OR              reduce using rule 36 (expr -> expr LE expr .)
    AND             reduce using rule 36 (expr -> expr LE expr .)
    /               reduce using rule 36 (expr -> expr LE expr .)
    *               reduce using rule 36 (expr -> expr LE expr .)
    -               reduce using rule 36 (expr -> expr LE expr .)
    +               reduce using rule 36 (expr -> expr LE expr .)


state 63

    (20) expr -> IF expr < expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr < expr . THEN NAME = expr ELSE NAME = expr
    (29) expr -> IF expr < expr . THEN PRINT ( STRING )
    (30) expr -> IF expr < expr . THEN NAME = expr
    (37) expr -> expr < expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    THEN            shift and go to state 71
    EQ              reduce using rule 37 (expr -> expr < expr .)
    LE              reduce using rule 37 (expr -> expr < expr .)
    <               reduce using rule 37 (expr -> expr < expr .)
    GE              reduce using rule 37 (expr -> expr < expr .)
    >               reduce using rule 37 (expr -> expr < expr .)
    NE              reduce using rule 37 (expr -> expr < expr .)
    OR              reduce using rule 37 (expr -> expr < expr .)
    AND             reduce using rule 37 (expr -> expr < expr .)
    /               reduce using rule 37 (expr -> expr < expr .)
    *               reduce using rule 37 (expr -> expr < expr .)
    -               reduce using rule 37 (expr -> expr < expr .)
    +               reduce using rule 37 (expr -> expr < expr .)


state 64

    (22) expr -> IF expr GE expr . THEN NAME = expr ELSE NAME = expr
    (31) expr -> IF expr GE expr . THEN NAME = expr
    (38) expr -> expr GE expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    THEN            shift and go to state 72
    EQ              reduce using rule 38 (expr -> expr GE expr .)
    LE              reduce using rule 38 (expr -> expr GE expr .)
    <               reduce using rule 38 (expr -> expr GE expr .)
    GE              reduce using rule 38 (expr -> expr GE expr .)
    >               reduce using rule 38 (expr -> expr GE expr .)
    NE              reduce using rule 38 (expr -> expr GE expr .)
    OR              reduce using rule 38 (expr -> expr GE expr .)
    AND             reduce using rule 38 (expr -> expr GE expr .)
    /               reduce using rule 38 (expr -> expr GE expr .)
    *               reduce using rule 38 (expr -> expr GE expr .)
    -               reduce using rule 38 (expr -> expr GE expr .)
    +               reduce using rule 38 (expr -> expr GE expr .)


state 65

    (23) expr -> IF expr > expr . THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF expr > expr . THEN NAME = expr ELSE NAME = expr
    (32) expr -> IF expr > expr . THEN PRINT ( STRING )
    (33) expr -> IF expr > expr . THEN NAME = expr
    (39) expr -> expr > expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    THEN            shift and go to state 73
    EQ              reduce using rule 39 (expr -> expr > expr .)
    LE              reduce using rule 39 (expr -> expr > expr .)
    <               reduce using rule 39 (expr -> expr > expr .)
    GE              reduce using rule 39 (expr -> expr > expr .)
    >               reduce using rule 39 (expr -> expr > expr .)
    NE              reduce using rule 39 (expr -> expr > expr .)
    OR              reduce using rule 39 (expr -> expr > expr .)
    AND             reduce using rule 39 (expr -> expr > expr .)
    /               reduce using rule 39 (expr -> expr > expr .)
    *               reduce using rule 39 (expr -> expr > expr .)
    -               reduce using rule 39 (expr -> expr > expr .)
    +               reduce using rule 39 (expr -> expr > expr .)


state 66

    (6) expr -> WHILE ( expr ) . DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> WHILE ( expr ) . DO expr NAME = expr - expr
    (8) expr -> WHILE ( expr ) . DO PRINT ( NUMBER )
    (9) expr -> WHILE ( expr ) . DO PRINT ( expr )
    DO              shift and go to state 74


state 67

    (10) expr -> PRINT ( expr ) .
    )               reduce using rule 10 (expr -> PRINT ( expr ) .)
    NE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    EQ              reduce using rule 10 (expr -> PRINT ( expr ) .)
    LE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    <               reduce using rule 10 (expr -> PRINT ( expr ) .)
    GE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    >               reduce using rule 10 (expr -> PRINT ( expr ) .)
    OR              reduce using rule 10 (expr -> PRINT ( expr ) .)
    AND             reduce using rule 10 (expr -> PRINT ( expr ) .)
    /               reduce using rule 10 (expr -> PRINT ( expr ) .)
    *               reduce using rule 10 (expr -> PRINT ( expr ) .)
    -               reduce using rule 10 (expr -> PRINT ( expr ) .)
    +               reduce using rule 10 (expr -> PRINT ( expr ) .)
    $end            reduce using rule 10 (expr -> PRINT ( expr ) .)
    THEN            reduce using rule 10 (expr -> PRINT ( expr ) .)
    NAME            reduce using rule 10 (expr -> PRINT ( expr ) .)
    ELSE            reduce using rule 10 (expr -> PRINT ( expr ) .)
    PRINT           reduce using rule 10 (expr -> PRINT ( expr ) .)


state 68

    (2) statement -> IF ( expr ) statement .
    $end            reduce using rule 2 (statement -> IF ( expr ) statement .)


state 69

    (17) expr -> IF expr EQ expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> IF expr EQ expr THEN . NAME = expr ELSE NAME = expr
    (25) expr -> IF expr EQ expr THEN . PRINT ( NUMBER )
    (26) expr -> IF expr EQ expr THEN . PRINT ( STRING )
    (27) expr -> IF expr EQ expr THEN . NAME = expr
    PRINT           shift and go to state 75
    NAME            shift and go to state 76


state 70

    (19) expr -> IF expr LE expr THEN . NAME = expr ELSE NAME = expr
    (28) expr -> IF expr LE expr THEN . NAME = expr
    NAME            shift and go to state 77


state 71

    (20) expr -> IF expr < expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> IF expr < expr THEN . NAME = expr ELSE NAME = expr
    (29) expr -> IF expr < expr THEN . PRINT ( STRING )
    (30) expr -> IF expr < expr THEN . NAME = expr
    PRINT           shift and go to state 78
    NAME            shift and go to state 79


state 72

    (22) expr -> IF expr GE expr THEN . NAME = expr ELSE NAME = expr
    (31) expr -> IF expr GE expr THEN . NAME = expr
    NAME            shift and go to state 80


state 73

    (23) expr -> IF expr > expr THEN . PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> IF expr > expr THEN . NAME = expr ELSE NAME = expr
    (32) expr -> IF expr > expr THEN . PRINT ( STRING )
    (33) expr -> IF expr > expr THEN . NAME = expr
    PRINT           shift and go to state 81
    NAME            shift and go to state 82


state 74

    (6) expr -> WHILE ( expr ) DO . NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> WHILE ( expr ) DO . expr NAME = expr - expr
    (8) expr -> WHILE ( expr ) DO . PRINT ( NUMBER )
    (9) expr -> WHILE ( expr ) DO . PRINT ( expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 84
    PRINT           shift and go to state 85
    WHILE           shift and go to state 7
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 83

state 75

    (17) expr -> IF expr EQ expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (25) expr -> IF expr EQ expr THEN PRINT . ( NUMBER )
    (26) expr -> IF expr EQ expr THEN PRINT . ( STRING )
    (               shift and go to state 86


state 76

    (18) expr -> IF expr EQ expr THEN NAME . = expr ELSE NAME = expr
    (27) expr -> IF expr EQ expr THEN NAME . = expr
    =               shift and go to state 87


state 77

    (19) expr -> IF expr LE expr THEN NAME . = expr ELSE NAME = expr
    (28) expr -> IF expr LE expr THEN NAME . = expr
    =               shift and go to state 88


state 78

    (20) expr -> IF expr < expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (29) expr -> IF expr < expr THEN PRINT . ( STRING )
    (               shift and go to state 89


state 79

    (21) expr -> IF expr < expr THEN NAME . = expr ELSE NAME = expr
    (30) expr -> IF expr < expr THEN NAME . = expr
    =               shift and go to state 90


state 80

    (22) expr -> IF expr GE expr THEN NAME . = expr ELSE NAME = expr
    (31) expr -> IF expr GE expr THEN NAME . = expr
    =               shift and go to state 91


state 81

    (23) expr -> IF expr > expr THEN PRINT . ( STRING ) ELSE PRINT ( STRING )
    (32) expr -> IF expr > expr THEN PRINT . ( STRING )
    (               shift and go to state 92


state 82

    (24) expr -> IF expr > expr THEN NAME . = expr ELSE NAME = expr
    (33) expr -> IF expr > expr THEN NAME . = expr
    =               shift and go to state 93


state 83

    (7) expr -> WHILE ( expr ) DO expr . NAME = expr - expr
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NAME            shift and go to state 94
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 84

    (6) expr -> WHILE ( expr ) DO NAME . = expr * expr NAME = expr - expr PRINT ( NAME )
    (5) expr -> NAME .
    =               shift and go to state 95
    NAME            reduce using rule 5 (expr -> NAME .)
    NE              reduce using rule 5 (expr -> NAME .)
    EQ              reduce using rule 5 (expr -> NAME .)
    LE              reduce using rule 5 (expr -> NAME .)
    <               reduce using rule 5 (expr -> NAME .)
    GE              reduce using rule 5 (expr -> NAME .)
    >               reduce using rule 5 (expr -> NAME .)
    OR              reduce using rule 5 (expr -> NAME .)
    AND             reduce using rule 5 (expr -> NAME .)
    /               reduce using rule 5 (expr -> NAME .)
    *               reduce using rule 5 (expr -> NAME .)
    -               reduce using rule 5 (expr -> NAME .)
    +               reduce using rule 5 (expr -> NAME .)


state 85

    (8) expr -> WHILE ( expr ) DO PRINT . ( NUMBER )
    (9) expr -> WHILE ( expr ) DO PRINT . ( expr )
    (10) expr -> PRINT . ( expr )
    (               shift and go to state 96


state 86

    (17) expr -> IF expr EQ expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (25) expr -> IF expr EQ expr THEN PRINT ( . NUMBER )
    (26) expr -> IF expr EQ expr THEN PRINT ( . STRING )
    STRING          shift and go to state 97
    NUMBER          shift and go to state 98


state 87

    (18) expr -> IF expr EQ expr THEN NAME = . expr ELSE NAME = expr
    (27) expr -> IF expr EQ expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 99

state 88

    (19) expr -> IF expr LE expr THEN NAME = . expr ELSE NAME = expr
    (28) expr -> IF expr LE expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 100

state 89

    (20) expr -> IF expr < expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (29) expr -> IF expr < expr THEN PRINT ( . STRING )
    STRING          shift and go to state 101


state 90

    (21) expr -> IF expr < expr THEN NAME = . expr ELSE NAME = expr
    (30) expr -> IF expr < expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 102

state 91

    (22) expr -> IF expr GE expr THEN NAME = . expr ELSE NAME = expr
    (31) expr -> IF expr GE expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 103

state 92

    (23) expr -> IF expr > expr THEN PRINT ( . STRING ) ELSE PRINT ( STRING )
    (32) expr -> IF expr > expr THEN PRINT ( . STRING )
    STRING          shift and go to state 104


state 93

    (24) expr -> IF expr > expr THEN NAME = . expr ELSE NAME = expr
    (33) expr -> IF expr > expr THEN NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 105

state 94

    (7) expr -> WHILE ( expr ) DO expr NAME . = expr - expr
    =               shift and go to state 106


state 95

    (6) expr -> WHILE ( expr ) DO NAME = . expr * expr NAME = expr - expr PRINT ( NAME )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 107

state 96

    (8) expr -> WHILE ( expr ) DO PRINT ( . NUMBER )
    (9) expr -> WHILE ( expr ) DO PRINT ( . expr )
    (10) expr -> PRINT ( . expr )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NUMBER          shift and go to state 109
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 108

state 97

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (26) expr -> IF expr EQ expr THEN PRINT ( STRING . )
    )               shift and go to state 110


state 98

    (25) expr -> IF expr EQ expr THEN PRINT ( NUMBER . )
    )               shift and go to state 111


state 99

    (18) expr -> IF expr EQ expr THEN NAME = expr . ELSE NAME = expr
    (27) expr -> IF expr EQ expr THEN NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 112
    $end            reduce using rule 27 (expr -> IF expr EQ expr THEN NAME = expr .)
    )               reduce using rule 27 (expr -> IF expr EQ expr THEN NAME = expr .)
    THEN            reduce using rule 27 (expr -> IF expr EQ expr THEN NAME = expr .)
    NAME            reduce using rule 27 (expr -> IF expr EQ expr THEN NAME = expr .)
    PRINT           reduce using rule 27 (expr -> IF expr EQ expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 100

    (19) expr -> IF expr LE expr THEN NAME = expr . ELSE NAME = expr
    (28) expr -> IF expr LE expr THEN NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 113
    $end            reduce using rule 28 (expr -> IF expr LE expr THEN NAME = expr .)
    )               reduce using rule 28 (expr -> IF expr LE expr THEN NAME = expr .)
    THEN            reduce using rule 28 (expr -> IF expr LE expr THEN NAME = expr .)
    NAME            reduce using rule 28 (expr -> IF expr LE expr THEN NAME = expr .)
    PRINT           reduce using rule 28 (expr -> IF expr LE expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 101

    (20) expr -> IF expr < expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (29) expr -> IF expr < expr THEN PRINT ( STRING . )
    )               shift and go to state 114


state 102

    (21) expr -> IF expr < expr THEN NAME = expr . ELSE NAME = expr
    (30) expr -> IF expr < expr THEN NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 115
    $end            reduce using rule 30 (expr -> IF expr < expr THEN NAME = expr .)
    )               reduce using rule 30 (expr -> IF expr < expr THEN NAME = expr .)
    THEN            reduce using rule 30 (expr -> IF expr < expr THEN NAME = expr .)
    NAME            reduce using rule 30 (expr -> IF expr < expr THEN NAME = expr .)
    PRINT           reduce using rule 30 (expr -> IF expr < expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 103

    (22) expr -> IF expr GE expr THEN NAME = expr . ELSE NAME = expr
    (31) expr -> IF expr GE expr THEN NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 116
    $end            reduce using rule 31 (expr -> IF expr GE expr THEN NAME = expr .)
    )               reduce using rule 31 (expr -> IF expr GE expr THEN NAME = expr .)
    THEN            reduce using rule 31 (expr -> IF expr GE expr THEN NAME = expr .)
    NAME            reduce using rule 31 (expr -> IF expr GE expr THEN NAME = expr .)
    PRINT           reduce using rule 31 (expr -> IF expr GE expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 104

    (23) expr -> IF expr > expr THEN PRINT ( STRING . ) ELSE PRINT ( STRING )
    (32) expr -> IF expr > expr THEN PRINT ( STRING . )
    )               shift and go to state 117


state 105

    (24) expr -> IF expr > expr THEN NAME = expr . ELSE NAME = expr
    (33) expr -> IF expr > expr THEN NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ELSE            shift and go to state 118
    $end            reduce using rule 33 (expr -> IF expr > expr THEN NAME = expr .)
    )               reduce using rule 33 (expr -> IF expr > expr THEN NAME = expr .)
    THEN            reduce using rule 33 (expr -> IF expr > expr THEN NAME = expr .)
    NAME            reduce using rule 33 (expr -> IF expr > expr THEN NAME = expr .)
    PRINT           reduce using rule 33 (expr -> IF expr > expr THEN NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 106

    (7) expr -> WHILE ( expr ) DO expr NAME = . expr - expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 119

state 107

    (6) expr -> WHILE ( expr ) DO NAME = expr . * expr NAME = expr - expr PRINT ( NAME )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    *               shift and go to state 120
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    -               shift and go to state 28
    +               shift and go to state 29


state 108

    (9) expr -> WHILE ( expr ) DO PRINT ( expr . )
    (10) expr -> PRINT ( expr . )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    )               shift and go to state 121
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 109

    (8) expr -> WHILE ( expr ) DO PRINT ( NUMBER . )
    (14) expr -> NUMBER .
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 122
    NE              reduce using rule 14 (expr -> NUMBER .)
    EQ              reduce using rule 14 (expr -> NUMBER .)
    LE              reduce using rule 14 (expr -> NUMBER .)
    <               reduce using rule 14 (expr -> NUMBER .)
    GE              reduce using rule 14 (expr -> NUMBER .)
    >               reduce using rule 14 (expr -> NUMBER .)
    OR              reduce using rule 14 (expr -> NUMBER .)
    AND             reduce using rule 14 (expr -> NUMBER .)
    /               reduce using rule 14 (expr -> NUMBER .)
    *               reduce using rule 14 (expr -> NUMBER .)
    -               reduce using rule 14 (expr -> NUMBER .)
    +               reduce using rule 14 (expr -> NUMBER .)


state 110

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (26) expr -> IF expr EQ expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 123
    NE              reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    <               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    >               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    /               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    *               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    -               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    +               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    )               reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    NAME            reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)
    PRINT           reduce using rule 26 (expr -> IF expr EQ expr THEN PRINT ( STRING ) .)


state 111

    (25) expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .
    NE              reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    EQ              reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    LE              reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    <               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    GE              reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    >               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    OR              reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    AND             reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    /               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    *               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    -               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    +               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    $end            reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    )               reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    THEN            reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    NAME            reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    ELSE            reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)
    PRINT           reduce using rule 25 (expr -> IF expr EQ expr THEN PRINT ( NUMBER ) .)


state 112

    (18) expr -> IF expr EQ expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 124


state 113

    (19) expr -> IF expr LE expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 125


state 114

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (29) expr -> IF expr < expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 126
    NE              reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    <               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    >               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    /               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    *               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    -               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    +               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    )               reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    NAME            reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)
    PRINT           reduce using rule 29 (expr -> IF expr < expr THEN PRINT ( STRING ) .)


state 115

    (21) expr -> IF expr < expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 127


state 116

    (22) expr -> IF expr GE expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 128


state 117

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) . ELSE PRINT ( STRING )
    (32) expr -> IF expr > expr THEN PRINT ( STRING ) .
    ELSE            shift and go to state 129
    NE              reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    EQ              reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    LE              reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    <               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    GE              reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    >               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    OR              reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    AND             reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    /               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    *               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    -               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    +               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    $end            reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    )               reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    THEN            reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    NAME            reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)
    PRINT           reduce using rule 32 (expr -> IF expr > expr THEN PRINT ( STRING ) .)


state 118

    (24) expr -> IF expr > expr THEN NAME = expr ELSE . NAME = expr
    NAME            shift and go to state 130


state 119

    (7) expr -> WHILE ( expr ) DO expr NAME = expr . - expr
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    -               shift and go to state 131
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    +               shift and go to state 29


state 120

    (6) expr -> WHILE ( expr ) DO NAME = expr * . expr NAME = expr - expr PRINT ( NAME )
    (43) expr -> expr * . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 132

state 121

    (9) expr -> WHILE ( expr ) DO PRINT ( expr ) .
    (10) expr -> PRINT ( expr ) .
  ! reduce/reduce conflict for NAME resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for NE resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for EQ resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for LE resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for < resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for GE resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for > resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for OR resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for AND resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for / resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for * resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for - resolved using rule 10 (expr -> PRINT ( expr ) .)
  ! reduce/reduce conflict for + resolved using rule 10 (expr -> PRINT ( expr ) .)
    $end            reduce using rule 9 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    )               reduce using rule 9 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    THEN            reduce using rule 9 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    ELSE            reduce using rule 9 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    PRINT           reduce using rule 9 (expr -> WHILE ( expr ) DO PRINT ( expr ) .)
    NAME            reduce using rule 10 (expr -> PRINT ( expr ) .)
    NE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    EQ              reduce using rule 10 (expr -> PRINT ( expr ) .)
    LE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    <               reduce using rule 10 (expr -> PRINT ( expr ) .)
    GE              reduce using rule 10 (expr -> PRINT ( expr ) .)
    >               reduce using rule 10 (expr -> PRINT ( expr ) .)
    OR              reduce using rule 10 (expr -> PRINT ( expr ) .)
    AND             reduce using rule 10 (expr -> PRINT ( expr ) .)
    /               reduce using rule 10 (expr -> PRINT ( expr ) .)
    *               reduce using rule 10 (expr -> PRINT ( expr ) .)
    -               reduce using rule 10 (expr -> PRINT ( expr ) .)
    +               reduce using rule 10 (expr -> PRINT ( expr ) .)


state 122

    (8) expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .
    NE              reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    EQ              reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    LE              reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    <               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    GE              reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    >               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    OR              reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    AND             reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    /               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    *               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    -               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    +               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    $end            reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    )               reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    THEN            reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    NAME            reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    ELSE            reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)
    PRINT           reduce using rule 8 (expr -> WHILE ( expr ) DO PRINT ( NUMBER ) .)


state 123

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 133


state 124

    (18) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 134


state 125

    (19) expr -> IF expr LE expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 135


state 126

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 136


state 127

    (21) expr -> IF expr < expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 137


state 128

    (22) expr -> IF expr GE expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 138


state 129

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE . PRINT ( STRING )
    PRINT           shift and go to state 139


state 130

    (24) expr -> IF expr > expr THEN NAME = expr ELSE NAME . = expr
    =               shift and go to state 140


state 131

    (7) expr -> WHILE ( expr ) DO expr NAME = expr - . expr
    (44) expr -> expr - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 141

state 132

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr . NAME = expr - expr PRINT ( NAME )
    (43) expr -> expr * expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    NAME            shift and go to state 142
    *               reduce using rule 43 (expr -> expr * expr .)
    NE              reduce using rule 43 (expr -> expr * expr .)
    EQ              reduce using rule 43 (expr -> expr * expr .)
    /               reduce using rule 43 (expr -> expr * expr .)
    -               reduce using rule 43 (expr -> expr * expr .)
    +               reduce using rule 43 (expr -> expr * expr .)
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25


state 133

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 143


state 134

    (18) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 144

state 135

    (19) expr -> IF expr LE expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 145

state 136

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 146


state 137

    (21) expr -> IF expr < expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 147

state 138

    (22) expr -> IF expr GE expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 148

state 139

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT . ( STRING )
    (               shift and go to state 149


state 140

    (24) expr -> IF expr > expr THEN NAME = expr ELSE NAME = . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 150

state 141

    (7) expr -> WHILE ( expr ) DO expr NAME = expr - expr .
    (44) expr -> expr - expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! reduce/reduce conflict for - resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for NE resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for EQ resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for LE resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for < resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for GE resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for > resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for OR resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for AND resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for / resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for * resolved using rule 44 (expr -> expr - expr .)
  ! reduce/reduce conflict for + resolved using rule 44 (expr -> expr - expr .)
    $end            reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    )               reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    THEN            reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    NAME            reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    ELSE            reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    PRINT           reduce using rule 7 (expr -> WHILE ( expr ) DO expr NAME = expr - expr .)
    -               reduce using rule 44 (expr -> expr - expr .)
    +               reduce using rule 44 (expr -> expr - expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 142

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME . = expr - expr PRINT ( NAME )
    =               shift and go to state 151


state 143

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 152


state 144

    (18) expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    NAME            reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    PRINT           reduce using rule 18 (expr -> IF expr EQ expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 145

    (19) expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    NAME            reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    PRINT           reduce using rule 19 (expr -> IF expr LE expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 146

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 153


state 147

    (21) expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    NAME            reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    PRINT           reduce using rule 21 (expr -> IF expr < expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 148

    (22) expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    NAME            reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    PRINT           reduce using rule 22 (expr -> IF expr GE expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 149

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( . STRING )
    STRING          shift and go to state 154


state 150

    (24) expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    )               reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    THEN            reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    NAME            reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    ELSE            reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    PRINT           reduce using rule 24 (expr -> IF expr > expr THEN NAME = expr ELSE NAME = expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    -               shift and go to state 28
    +               shift and go to state 29


state 151

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = . expr - expr PRINT ( NAME )
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 155

state 152

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 156


state 153

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 157


state 154

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING . )
    )               shift and go to state 158


state 155

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr . - expr PRINT ( NAME )
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    -               shift and go to state 159
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27
    +               shift and go to state 29


state 156

    (17) expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    NAME            reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    PRINT           reduce using rule 17 (expr -> IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


state 157

    (20) expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    NAME            reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    PRINT           reduce using rule 20 (expr -> IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


state 158

    (23) expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .
    NE              reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    EQ              reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    LE              reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    <               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    GE              reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    >               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    OR              reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    AND             reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    /               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    *               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    -               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    +               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    $end            reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    )               reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    THEN            reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    NAME            reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    ELSE            reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)
    PRINT           reduce using rule 23 (expr -> IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING ) .)


state 159

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - . expr PRINT ( NAME )
    (44) expr -> expr - . expr
    (5) expr -> . NAME
    (6) expr -> . WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME )
    (7) expr -> . WHILE ( expr ) DO expr NAME = expr - expr
    (8) expr -> . WHILE ( expr ) DO PRINT ( NUMBER )
    (9) expr -> . WHILE ( expr ) DO PRINT ( expr )
    (10) expr -> . PRINT ( expr )
    (11) expr -> . STRING
    (12) expr -> . BOOL
    (13) expr -> . FLOAT
    (14) expr -> . NUMBER
    (15) expr -> . ( expr )
    (16) expr -> . - expr
    (17) expr -> . IF expr EQ expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (18) expr -> . IF expr EQ expr THEN NAME = expr ELSE NAME = expr
    (19) expr -> . IF expr LE expr THEN NAME = expr ELSE NAME = expr
    (20) expr -> . IF expr < expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (21) expr -> . IF expr < expr THEN NAME = expr ELSE NAME = expr
    (22) expr -> . IF expr GE expr THEN NAME = expr ELSE NAME = expr
    (23) expr -> . IF expr > expr THEN PRINT ( STRING ) ELSE PRINT ( STRING )
    (24) expr -> . IF expr > expr THEN NAME = expr ELSE NAME = expr
    (25) expr -> . IF expr EQ expr THEN PRINT ( NUMBER )
    (26) expr -> . IF expr EQ expr THEN PRINT ( STRING )
    (27) expr -> . IF expr EQ expr THEN NAME = expr
    (28) expr -> . IF expr LE expr THEN NAME = expr
    (29) expr -> . IF expr < expr THEN PRINT ( STRING )
    (30) expr -> . IF expr < expr THEN NAME = expr
    (31) expr -> . IF expr GE expr THEN NAME = expr
    (32) expr -> . IF expr > expr THEN PRINT ( STRING )
    (33) expr -> . IF expr > expr THEN NAME = expr
    (34) expr -> . expr NE expr
    (35) expr -> . expr EQ expr
    (36) expr -> . expr LE expr
    (37) expr -> . expr < expr
    (38) expr -> . expr GE expr
    (39) expr -> . expr > expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . expr / expr
    (43) expr -> . expr * expr
    (44) expr -> . expr - expr
    (45) expr -> . expr + expr
    NAME            shift and go to state 15
    WHILE           shift and go to state 7
    PRINT           shift and go to state 16
    STRING          shift and go to state 10
    BOOL            shift and go to state 11
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 9
    (               shift and go to state 3
    -               shift and go to state 8
    IF              shift and go to state 17

    expr                           shift and go to state 160

state 160

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr . PRINT ( NAME )
    (44) expr -> expr - expr .
    (34) expr -> expr . NE expr
    (35) expr -> expr . EQ expr
    (36) expr -> expr . LE expr
    (37) expr -> expr . < expr
    (38) expr -> expr . GE expr
    (39) expr -> expr . > expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr
    (42) expr -> expr . / expr
    (43) expr -> expr . * expr
    (44) expr -> expr . - expr
    (45) expr -> expr . + expr
    PRINT           shift and go to state 161
    -               reduce using rule 44 (expr -> expr - expr .)
    +               reduce using rule 44 (expr -> expr - expr .)
    NE              shift and go to state 18
    EQ              shift and go to state 19
    LE              shift and go to state 20
    <               shift and go to state 21
    GE              shift and go to state 22
    >               shift and go to state 23
    OR              shift and go to state 24
    AND             shift and go to state 25
    /               shift and go to state 26
    *               shift and go to state 27


state 161

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT . ( NAME )
    (               shift and go to state 162


state 162

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( . NAME )
    NAME            shift and go to state 163


state 163

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME . )
    )               shift and go to state 164


state 164

    (6) expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .
    NE              reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    EQ              reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    LE              reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    <               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    GE              reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    >               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    OR              reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    AND             reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    /               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    *               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    -               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    +               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    $end            reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    )               reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    THEN            reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    NAME            reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    ELSE            reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)
    PRINT           reduce using rule 6 (expr -> WHILE ( expr ) DO NAME = expr * expr NAME = expr - expr PRINT ( NAME ) .)


Conflicts:

shift/reduce conflict for ELSE in state 99 resolved as shift
shift/reduce conflict for NE in state 99 resolved as shift
shift/reduce conflict for EQ in state 99 resolved as shift
shift/reduce conflict for LE in state 99 resolved as shift
shift/reduce conflict for < in state 99 resolved as shift
shift/reduce conflict for GE in state 99 resolved as shift
shift/reduce conflict for > in state 99 resolved as shift
shift/reduce conflict for OR in state 99 resolved as shift
shift/reduce conflict for AND in state 99 resolved as shift
shift/reduce conflict for / in state 99 resolved as shift
shift/reduce conflict for * in state 99 resolved as shift
shift/reduce conflict for - in state 99 resolved as shift
shift/reduce conflict for + in state 99 resolved as shift
shift/reduce conflict for ELSE in state 100 resolved as shift
shift/reduce conflict for NE in state 100 resolved as shift
shift/reduce conflict for EQ in state 100 resolved as shift
shift/reduce conflict for LE in state 100 resolved as shift
shift/reduce conflict for < in state 100 resolved as shift
shift/reduce conflict for GE in state 100 resolved as shift
shift/reduce conflict for > in state 100 resolved as shift
shift/reduce conflict for OR in state 100 resolved as shift
shift/reduce conflict for AND in state 100 resolved as shift
shift/reduce conflict for / in state 100 resolved as shift
shift/reduce conflict for * in state 100 resolved as shift
shift/reduce conflict for - in state 100 resolved as shift
shift/reduce conflict for + in state 100 resolved as shift
shift/reduce conflict for ELSE in state 102 resolved as shift
shift/reduce conflict for NE in state 102 resolved as shift
shift/reduce conflict for EQ in state 102 resolved as shift
shift/reduce conflict for LE in state 102 resolved as shift
shift/reduce conflict for < in state 102 resolved as shift
shift/reduce conflict for GE in state 102 resolved as shift
shift/reduce conflict for > in state 102 resolved as shift
shift/reduce conflict for OR in state 102 resolved as shift
shift/reduce conflict for AND in state 102 resolved as shift
shift/reduce conflict for / in state 102 resolved as shift
shift/reduce conflict for * in state 102 resolved as shift
shift/reduce conflict for - in state 102 resolved as shift
shift/reduce conflict for + in state 102 resolved as shift
shift/reduce conflict for ELSE in state 103 resolved as shift
shift/reduce conflict for NE in state 103 resolved as shift
shift/reduce conflict for EQ in state 103 resolved as shift
shift/reduce conflict for LE in state 103 resolved as shift
shift/reduce conflict for < in state 103 resolved as shift
shift/reduce conflict for GE in state 103 resolved as shift
shift/reduce conflict for > in state 103 resolved as shift
shift/reduce conflict for OR in state 103 resolved as shift
shift/reduce conflict for AND in state 103 resolved as shift
shift/reduce conflict for / in state 103 resolved as shift
shift/reduce conflict for * in state 103 resolved as shift
shift/reduce conflict for - in state 103 resolved as shift
shift/reduce conflict for + in state 103 resolved as shift
shift/reduce conflict for ELSE in state 105 resolved as shift
shift/reduce conflict for NE in state 105 resolved as shift
shift/reduce conflict for EQ in state 105 resolved as shift
shift/reduce conflict for LE in state 105 resolved as shift
shift/reduce conflict for < in state 105 resolved as shift
shift/reduce conflict for GE in state 105 resolved as shift
shift/reduce conflict for > in state 105 resolved as shift
shift/reduce conflict for OR in state 105 resolved as shift
shift/reduce conflict for AND in state 105 resolved as shift
shift/reduce conflict for / in state 105 resolved as shift
shift/reduce conflict for * in state 105 resolved as shift
shift/reduce conflict for - in state 105 resolved as shift
shift/reduce conflict for + in state 105 resolved as shift
shift/reduce conflict for ) in state 109 resolved as shift
shift/reduce conflict for NE in state 144 resolved as shift
shift/reduce conflict for EQ in state 144 resolved as shift
shift/reduce conflict for LE in state 144 resolved as shift
shift/reduce conflict for < in state 144 resolved as shift
shift/reduce conflict for GE in state 144 resolved as shift
shift/reduce conflict for > in state 144 resolved as shift
shift/reduce conflict for OR in state 144 resolved as shift
shift/reduce conflict for AND in state 144 resolved as shift
shift/reduce conflict for / in state 144 resolved as shift
shift/reduce conflict for * in state 144 resolved as shift
shift/reduce conflict for - in state 144 resolved as shift
shift/reduce conflict for + in state 144 resolved as shift
shift/reduce conflict for NE in state 145 resolved as shift
shift/reduce conflict for EQ in state 145 resolved as shift
shift/reduce conflict for LE in state 145 resolved as shift
shift/reduce conflict for < in state 145 resolved as shift
shift/reduce conflict for GE in state 145 resolved as shift
shift/reduce conflict for > in state 145 resolved as shift
shift/reduce conflict for OR in state 145 resolved as shift
shift/reduce conflict for AND in state 145 resolved as shift
shift/reduce conflict for / in state 145 resolved as shift
shift/reduce conflict for * in state 145 resolved as shift
shift/reduce conflict for - in state 145 resolved as shift
shift/reduce conflict for + in state 145 resolved as shift
shift/reduce conflict for NE in state 147 resolved as shift
shift/reduce conflict for EQ in state 147 resolved as shift
shift/reduce conflict for LE in state 147 resolved as shift
shift/reduce conflict for < in state 147 resolved as shift
shift/reduce conflict for GE in state 147 resolved as shift
shift/reduce conflict for > in state 147 resolved as shift
shift/reduce conflict for OR in state 147 resolved as shift
shift/reduce conflict for AND in state 147 resolved as shift
shift/reduce conflict for / in state 147 resolved as shift
shift/reduce conflict for * in state 147 resolved as shift
shift/reduce conflict for - in state 147 resolved as shift
shift/reduce conflict for + in state 147 resolved as shift
shift/reduce conflict for NE in state 148 resolved as shift
shift/reduce conflict for EQ in state 148 resolved as shift
shift/reduce conflict for LE in state 148 resolved as shift
shift/reduce conflict for < in state 148 resolved as shift
shift/reduce conflict for GE in state 148 resolved as shift
shift/reduce conflict for > in state 148 resolved as shift
shift/reduce conflict for OR in state 148 resolved as shift
shift/reduce conflict for AND in state 148 resolved as shift
shift/reduce conflict for / in state 148 resolved as shift
shift/reduce conflict for * in state 148 resolved as shift
shift/reduce conflict for - in state 148 resolved as shift
shift/reduce conflict for + in state 148 resolved as shift
shift/reduce conflict for NE in state 150 resolved as shift
shift/reduce conflict for EQ in state 150 resolved as shift
shift/reduce conflict for LE in state 150 resolved as shift
shift/reduce conflict for < in state 150 resolved as shift
shift/reduce conflict for GE in state 150 resolved as shift
shift/reduce conflict for > in state 150 resolved as shift
shift/reduce conflict for OR in state 150 resolved as shift
shift/reduce conflict for AND in state 150 resolved as shift
shift/reduce conflict for / in state 150 resolved as shift
shift/reduce conflict for * in state 150 resolved as shift
shift/reduce conflict for - in state 150 resolved as shift
shift/reduce conflict for + in state 150 resolved as shift
reduce/reduce conflict in state 58 resolved using rule expr -> PRINT ( expr )  [precedence=left, level=8]
rejected rule (statement -> PRINT ( expr )  [precedence=left, level=8]) in state 58
reduce/reduce conflict in state 121 resolved using rule expr -> PRINT ( expr )  [precedence=left, level=8]
rejected rule (expr -> WHILE ( expr ) DO PRINT ( expr )  [precedence=left, level=8]) in state 121
reduce/reduce conflict in state 141 resolved using rule expr -> expr - expr  [precedence=left, level=1]
rejected rule (expr -> WHILE ( expr ) DO expr NAME = expr - expr  [precedence=left, level=1]) in state 141
Rule (statement -> PRINT ( expr )  [precedence=left, level=8]) is never reduced